[{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"SetOf","typ":"Type -> Type","prefix":"record","html_id":"Text.ILex.Char.Set.SetOf"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"S","typ":"List (RangeOf t) -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.S"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":".ranges_","typ":"SetOf t -> List (RangeOf t)","prefix":"","html_id":"Text.ILex.Char.Set.SetOf.(.ranges_)"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"Set8","typ":"Type","prefix":"0","html_id":"Text.ILex.Char.Set.Set8"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"Set32","typ":"Type","prefix":"0","html_id":"Text.ILex.Char.Set.Set32"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"ranges","typ":"SetOf t -> List (RangeOf t)","prefix":"","html_id":"Text.ILex.Char.Set.ranges"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"empty","typ":"SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.empty"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"singleton","typ":"t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.singleton"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"range","typ":"RangeOf t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.range"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"isEmpty","typ":"SetOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Set.isEmpty"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"has","typ":"Ord t => SetOf t -> t -> Bool","prefix":"","html_id":"Text.ILex.Char.Set.has"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"rangeSet","typ":"Bounded t => Neg t => List (RangeOf t) -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.rangeSet"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"union","typ":"Bounded t => Neg t => SetOf t -> SetOf t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.union"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"intersection","typ":"Bounded t => Neg t => SetOf t -> SetOf t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.intersection"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"negation","typ":"Bounded t => Neg t => SetOf t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.negation"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"difference","typ":"Bounded t => Neg t => SetOf t -> SetOf t -> SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.difference"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"chars","typ":"String -> Set32","prefix":"","html_id":"Text.ILex.Char.Set.chars"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"fullSet","typ":"Bounded t => SetOf t","prefix":"","html_id":"Text.ILex.Char.Set.fullSet"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"isFull","typ":"Bounded t => SetOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Set.isFull"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"charRange","typ":"Char -> Char -> Set32","prefix":"","html_id":"Text.ILex.Char.Set.charRange"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"lower","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.lower"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"upper","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.upper"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"alpha","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.alpha"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"digit","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.digit"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"posdigit","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.posdigit"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"alphaNum","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.alphaNum"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"control","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.control"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"printable","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.printable"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"ascii","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.ascii"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"printableAscii","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.printableAscii"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"nl","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.nl"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Set.html","package":"ilex","namespace":"Text.ILex.Char.Set","name":"unicode","typ":"Set32","prefix":"","html_id":"Text.ILex.Char.Set.unicode"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"LexState","typ":"Nat -> Type","prefix":"record","html_id":"Text.ILex.Runner.LexState"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"LST","typ":"Fin (S n) -> ByteString -> LexState n","prefix":"","html_id":"Text.ILex.Runner.LST"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":".cur","typ":"LexState n -> Fin (S n)","prefix":"","html_id":"Text.ILex.Runner.LexState.(.cur)"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":".prev","typ":"LexState n -> ByteString","prefix":"","html_id":"Text.ILex.Runner.LexState.(.prev)"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"cur","typ":"LexState n -> Fin (S n)","prefix":"","html_id":"Text.ILex.Runner.LexState.cur"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"prev","typ":"LexState n -> ByteString","prefix":"","html_id":"Text.ILex.Runner.LexState.prev"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"init","typ":"LexState n","prefix":"","html_id":"Text.ILex.Runner.init"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"LexRes","typ":"Nat -> Type -> Type","prefix":"data","html_id":"Text.ILex.Runner.LexRes"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"EOI","typ":"Nat -> LexRes n a","prefix":"","html_id":"Text.ILex.Runner.EOI"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"Err","typ":"Nat -> Bits8 -> LexRes n a","prefix":"","html_id":"Text.ILex.Runner.Err"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"Toks","typ":"LexState n -> List a -> LexRes n a","prefix":"","html_id":"Text.ILex.Runner.Toks"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"lexChunk","typ":"(l : Lexer a) -> LexState (l .states) -> (n : Nat ** IBuffer n) -> LexRes (l .states) a","prefix":"","html_id":"Text.ILex.Runner.lexChunk"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"lex","typ":"(l : Lexer a) -> IBuffer n -> LexRes (l .states) a","prefix":"","html_id":"Text.ILex.Runner.lex"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"lexString","typ":"(l : Lexer a) -> String -> LexRes (l .states) a","prefix":"","html_id":"Text.ILex.Runner.lexString"},{"html_filename":"ilex/docs/docs/Text.ILex.Runner.html","package":"ilex","namespace":"Text.ILex.Runner","name":"lexBytes","typ":"(l : Lexer a) -> ByteString -> LexRes (l .states) a","prefix":"","html_id":"Text.ILex.Runner.lexBytes"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Tpe","typ":"Type","prefix":"data","html_id":"Text.ILex.Val.Tpe"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Plain","typ":"String -> Tpe","prefix":"","html_id":"Text.ILex.Val.Plain"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"App","typ":"Tpe -> Tpe -> Tpe","prefix":"","html_id":"Text.ILex.Val.App"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"NApp","typ":"Tpe -> String -> Tpe -> Tpe","prefix":"","html_id":"Text.ILex.Val.NApp"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Prim","typ":"PrimType -> Tpe","prefix":"","html_id":"Text.ILex.Val.Prim"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Pi","typ":"Tpe -> Tpe -> Tpe","prefix":"","html_id":"Text.ILex.Val.Pi"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Ty","typ":"Tpe","prefix":"","html_id":"Text.ILex.Val.Ty"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toName","typ":"Name -> Maybe String","prefix":"","html_id":"Text.ILex.Val.toName"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toTpe","typ":"TTImp -> Maybe Tpe","prefix":"","html_id":"Text.ILex.Val.toTpe"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"piAll","typ":"Tpe -> List Tpe -> Tpe","prefix":"","html_id":"Text.ILex.Val.piAll"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Value","typ":"Type","prefix":"data","html_id":"Text.ILex.Val.Value"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"VPlain","typ":"String -> Value","prefix":"","html_id":"Text.ILex.Val.VPlain"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"VApp","typ":"Value -> Value -> Value","prefix":"","html_id":"Text.ILex.Val.VApp"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"VNApp","typ":"Value -> String -> Value -> Value","prefix":"","html_id":"Text.ILex.Val.VNApp"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"VLam","typ":"String -> Value -> Value","prefix":"","html_id":"Text.ILex.Val.VLam"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"VPrim","typ":"Constant -> Value","prefix":"","html_id":"Text.ILex.Val.VPrim"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toVal","typ":"TTImp -> Maybe Value","prefix":"","html_id":"Text.ILex.Val.toVal"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"value","typ":"(t : TTImp) -> {auto 0 _ : IsJust (toVal t)} -> Value","prefix":"","html_id":"Text.ILex.Val.value"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"appAll","typ":"Value -> List Value -> Value","prefix":"","html_id":"Text.ILex.Val.appAll"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toNF","typ":"Value -> Value","prefix":"","html_id":"Text.ILex.Val.toNF"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"TOnly","typ":"Type -> Type","prefix":"record","html_id":"Text.ILex.Val.TOnly"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"TO","typ":"Tpe -> TOnly a","prefix":"","html_id":"Text.ILex.Val.TO"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":".tpe","typ":"TOnly a -> Tpe","prefix":"","html_id":"Text.ILex.Val.TOnly.(.tpe)"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"tpe","typ":"TOnly a -> Tpe","prefix":"","html_id":"Text.ILex.Val.TOnly.tpe"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"ToType","typ":"Type -> Type","prefix":"interface","html_id":"Text.ILex.Val.ToType"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toType_","typ":"TOnly a","prefix":"","html_id":"Text.ILex.Val.toType_"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"toType","typ":"(0 a : Type) -> ToType a => TOnly a","prefix":"","html_id":"Text.ILex.Val.toType"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"tpeof","typ":"(0 a : Type) -> ToType a => Tpe","prefix":"","html_id":"Text.ILex.Val.tpeof"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"tlift","typ":"(0 a : Type) -> Elab (TOnly a)","prefix":"","html_id":"Text.ILex.Val.tlift"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"mtlift","typ":"(0 a : Type) -> Elab (TOnly a)","prefix":"","html_id":"Text.ILex.Val.mtlift"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"funType2","typ":"(0 a : Type) -> (0 b : Type) -> ToType a => ToType b => TOnly (a -> b)","prefix":"","html_id":"Text.ILex.Val.funType2"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"funType3","typ":"(0 a : Type) -> (0 b : Type) -> (0 c : Type) -> ToType a => ToType b => ToType c => TOnly (a -> b -> c)","prefix":"","html_id":"Text.ILex.Val.funType3"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"funType4","typ":"(0 a : Type) -> (0 b : Type) -> (0 c : Type) -> (0 d : Type) -> ToType a => ToType b => ToType c => ToType d => TOnly (a -> b -> c -> d)","prefix":"","html_id":"Text.ILex.Val.funType4"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"Val","typ":"Type -> Type","prefix":"record","html_id":"Text.ILex.Val.Val"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"V","typ":"TOnly a -> Value -> Val a","prefix":"","html_id":"Text.ILex.Val.V"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":".val","typ":"Val a -> Value","prefix":"","html_id":"Text.ILex.Val.Val.(.val)"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"val","typ":"Val a -> Value","prefix":"","html_id":"Text.ILex.Val.Val.val"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"lift","typ":"(0 _ : a) -> Elab (Val a)","prefix":"","html_id":"Text.ILex.Val.lift"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"mlift","typ":"(0 _ : a) -> Elab (Val a)","prefix":"","html_id":"Text.ILex.Val.mlift"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"vwrap","typ":"ToType a => Val (a -> SnocList a)","prefix":"","html_id":"Text.ILex.Val.vwrap"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"vsnoc","typ":"ToType a => Val (SnocList a -> a -> SnocList a)","prefix":"","html_id":"Text.ILex.Val.vsnoc"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"vpack","typ":"ToType a => Val (SnocList a -> String)","prefix":"","html_id":"Text.ILex.Val.vpack"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"vjust","typ":"ToType a => Val (a -> Maybe a)","prefix":"","html_id":"Text.ILex.Val.vjust"},{"html_filename":"ilex/docs/docs/Text.ILex.Val.html","package":"ilex","namespace":"Text.ILex.Val","name":"vnothing","typ":"ToType a => Val (Maybe a)","prefix":"","html_id":"Text.ILex.Val.vnothing"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.ENFA.html","package":"ilex","namespace":"Text.ILex.Internal.ENFA","name":"connectedComponent","typ":"(a -> List Nat) -> Nat -> SortedMap Nat a -> SortedMap Nat a","prefix":"","html_id":"Text.ILex.Internal.ENFA.connectedComponent"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.ENFA.html","package":"ilex","namespace":"Text.ILex.Internal.ENFA","name":"toENFA","typ":"TokenMap8 a -> Norm a EGraph","prefix":"","html_id":"Text.ILex.Internal.ENFA.toENFA"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"Bounded","typ":"Type -> Type","prefix":"interface","html_id":"Text.ILex.Char.Range.Bounded"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"minBound","typ":"a","prefix":"","html_id":"Text.ILex.Char.Range.minBound"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"maxBound","typ":"a","prefix":"","html_id":"Text.ILex.Char.Range.maxBound"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"RangeOf","typ":"Type -> Type","prefix":"data","html_id":"Text.ILex.Char.Range.RangeOf"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"Empty","typ":"RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.Empty"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"Rng","typ":"t -> t -> RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.Rng"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"Range8","typ":"Type","prefix":"0","html_id":"Text.ILex.Char.Range.Range8"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"Range32","typ":"Type","prefix":"0","html_id":"Text.ILex.Char.Range.Range32"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"empty","typ":"RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.empty"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"singleton","typ":"t -> RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.singleton"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"isEmpty","typ":"RangeOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Range.isEmpty"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"range","typ":"Ord t => t -> t -> RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.range"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"has","typ":"Ord t => RangeOf t -> t -> Bool","prefix":"","html_id":"Text.ILex.Char.Range.has"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"overlap","typ":"Ord t => RangeOf t -> RangeOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Range.overlap"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"span","typ":"Ord t => RangeOf t -> RangeOf t -> RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.span"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"intersection","typ":"Ord t => RangeOf t -> RangeOf t -> RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.intersection"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"adjacent","typ":"Ord t => Neg t => RangeOf t -> RangeOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Range.adjacent"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"union","typ":"Ord t => Neg t => RangeOf t -> RangeOf t -> Either (RangeOf t) (RangeOf t, RangeOf t)","prefix":"","html_id":"Text.ILex.Char.Range.union"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"difference","typ":"Ord t => Neg t => RangeOf t -> RangeOf t -> Either (RangeOf t) (RangeOf t, RangeOf t)","prefix":"","html_id":"Text.ILex.Char.Range.difference"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"codepoint","typ":"Range32","prefix":"","html_id":"Text.ILex.Char.Range.codepoint"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"surrogate","typ":"Range32","prefix":"","html_id":"Text.ILex.Char.Range.surrogate"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"charRange","typ":"Char -> Char -> Range32","prefix":"","html_id":"Text.ILex.Char.Range.charRange"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"fullRange","typ":"Bounded t => RangeOf t","prefix":"","html_id":"Text.ILex.Char.Range.fullRange"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"isFull","typ":"Bounded t => RangeOf t -> Bool","prefix":"","html_id":"Text.ILex.Char.Range.isFull"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"lowerBound","typ":"Bounded t => RangeOf t -> t","prefix":"","html_id":"Text.ILex.Char.Range.lowerBound"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.Range.html","package":"ilex","namespace":"Text.ILex.Char.Range","name":"upperBound","typ":"Bounded t => RangeOf t -> t","prefix":"","html_id":"Text.ILex.Char.Range.upperBound"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"binary","typ":"ByteString -> Integer","prefix":"","html_id":"Text.ILex.Util.binary"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"decimaldigit","typ":"Bits8 -> Integer","prefix":"","html_id":"Text.ILex.Util.decimaldigit"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"octal","typ":"ByteString -> Integer","prefix":"","html_id":"Text.ILex.Util.octal"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"decimal","typ":"ByteString -> Integer","prefix":"","html_id":"Text.ILex.Util.decimal"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"hexdigit","typ":"Bits8 -> Integer","prefix":"","html_id":"Text.ILex.Util.hexdigit"},{"html_filename":"ilex/docs/docs/Text.ILex.Util.html","package":"ilex","namespace":"Text.ILex.Util","name":"hexadecimal","typ":"ByteString -> Integer","prefix":"","html_id":"Text.ILex.Util.hexadecimal"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NSet","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.NSet"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"sunion","typ":"NSet -> NSet -> NSet","prefix":"","html_id":"Text.ILex.Internal.Types.sunion"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Edge","typ":"Type","prefix":"record","html_id":"Text.ILex.Internal.Types.Edge"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"E","typ":"Range8 -> Nat -> Edge","prefix":"","html_id":"Text.ILex.Internal.Types.E"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".rule","typ":"Edge -> Range8","prefix":"","html_id":"Text.ILex.Internal.Types.Edge.(.rule)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".tgt","typ":"Edge -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.Edge.(.tgt)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"rule","typ":"Edge -> Range8","prefix":"","html_id":"Text.ILex.Internal.Types.Edge.rule"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"tgt","typ":"Edge -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.Edge.tgt"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"transitions","typ":"Edge -> List (Bits8, Nat)","prefix":"","html_id":"Text.ILex.Internal.Types.transitions"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Edges","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.Edges"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"ENode","typ":"Type","prefix":"record","html_id":"Text.ILex.Internal.Types.ENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"EN","typ":"List Nat -> List Nat -> Edges -> ENode","prefix":"","html_id":"Text.ILex.Internal.Types.EN"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".acc","typ":"ENode -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.(.acc)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".eps","typ":"ENode -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.(.eps)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".out","typ":"ENode -> Edges","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.(.out)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"acc","typ":"ENode -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.acc"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"eps","typ":"ENode -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.eps"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"out","typ":"ENode -> Edges","prefix":"","html_id":"Text.ILex.Internal.Types.ENode.out"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"EGraph","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.EGraph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NEdge","typ":"Type","prefix":"record","html_id":"Text.ILex.Internal.Types.NEdge"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NE","typ":"Range8 -> NSet -> NEdge","prefix":"","html_id":"Text.ILex.Internal.Types.NE"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".tgts","typ":"NEdge -> NSet","prefix":"","html_id":"Text.ILex.Internal.Types.NEdge.(.tgts)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"tgts","typ":"NEdge -> NSet","prefix":"","html_id":"Text.ILex.Internal.Types.NEdge.tgts"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NEdges","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.NEdges"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NNode","typ":"Type","prefix":"record","html_id":"Text.ILex.Internal.Types.NNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NN","typ":"Nat -> List Nat -> NEdges -> NNode","prefix":"","html_id":"Text.ILex.Internal.Types.NN"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".pos","typ":"NNode -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NNode.(.pos)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"pos","typ":"NNode -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NNode.pos"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"nchildren","typ":"NNode -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.nchildren"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NGraph","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.NGraph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Node","typ":"Type","prefix":"record","html_id":"Text.ILex.Internal.Types.Node"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"N","typ":"Nat -> List Nat -> Edges -> Node","prefix":"","html_id":"Text.ILex.Internal.Types.N"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"children","typ":"Node -> List Nat","prefix":"","html_id":"Text.ILex.Internal.Types.children"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Graph","typ":"Type","prefix":"0","html_id":"Text.ILex.Internal.Types.Graph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"safeLookup","typ":"Nat -> Lazy a -> SortedMap Nat a -> a","prefix":"","html_id":"Text.ILex.Internal.Types.safeLookup"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"NormState","typ":"Type -> Type","prefix":"record","html_id":"Text.ILex.Internal.Types.NormState"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"ST","typ":"SortedMap Nat a -> SortedMap NSet Nat -> EGraph -> NGraph -> Graph -> Nat -> NormState a","prefix":"","html_id":"Text.ILex.Internal.Types.ST"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".accs","typ":"NormState a -> SortedMap Nat a","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.accs)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".cur","typ":"NormState a -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.cur)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".egraph","typ":"NormState a -> EGraph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.egraph)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".graph","typ":"NormState a -> Graph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.graph)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".ngraph","typ":"NormState a -> NGraph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.ngraph)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".sets","typ":"NormState a -> SortedMap NSet Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.(.sets)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"accs","typ":"NormState a -> SortedMap Nat a","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.accs"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"sets","typ":"NormState a -> SortedMap NSet Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.sets"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"egraph","typ":"NormState a -> EGraph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.egraph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"ngraph","typ":"NormState a -> NGraph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.ngraph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"graph","typ":"NormState a -> Graph","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.graph"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"cur","typ":"NormState a -> Nat","prefix":"","html_id":"Text.ILex.Internal.Types.NormState.cur"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Norm","typ":"Type -> Type -> Type","prefix":"0","html_id":"Text.ILex.Internal.Types.Norm"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"inc","typ":"Norm a Nat","prefix":"","html_id":"Text.ILex.Internal.Types.inc"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"addSet","typ":"NSet -> Norm a Nat","prefix":"","html_id":"Text.ILex.Internal.Types.addSet"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"lookupSet","typ":"NSet -> Norm a (Maybe Nat)","prefix":"","html_id":"Text.ILex.Internal.Types.lookupSet"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"insertENode","typ":"Nat -> ENode -> Norm a Nat","prefix":"","html_id":"Text.ILex.Internal.Types.insertENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"insertTerminal","typ":"(Nat, (t, a)) -> Norm a ()","prefix":"","html_id":"Text.ILex.Internal.Types.insertTerminal"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"createENode","typ":"ENode -> Norm a Nat","prefix":"","html_id":"Text.ILex.Internal.Types.createENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"lookupENode","typ":"Nat -> Norm a (Maybe ENode)","prefix":"","html_id":"Text.ILex.Internal.Types.lookupENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"getENode","typ":"Nat -> Norm a ENode","prefix":"","html_id":"Text.ILex.Internal.Types.getENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"insertNNode","typ":"Nat -> NNode -> Norm a ()","prefix":"","html_id":"Text.ILex.Internal.Types.insertNNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"lookupNNode","typ":"Nat -> Norm a (Maybe NNode)","prefix":"","html_id":"Text.ILex.Internal.Types.lookupNNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"getNNode","typ":"Nat -> Norm a NNode","prefix":"","html_id":"Text.ILex.Internal.Types.getNNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"insertNode","typ":"Nat -> Node -> Norm a ()","prefix":"","html_id":"Text.ILex.Internal.Types.insertNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"lookupNode","typ":"Nat -> Norm a (Maybe Node)","prefix":"","html_id":"Text.ILex.Internal.Types.lookupNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"getNode","typ":"Nat -> Norm a Node","prefix":"","html_id":"Text.ILex.Internal.Types.getNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"runNorm","typ":"Norm a b -> (NormState a, b)","prefix":"","html_id":"Text.ILex.Internal.Types.runNorm"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"evalNorm","typ":"Norm a b -> b","prefix":"","html_id":"Text.ILex.Internal.Types.evalNorm"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"Machine","typ":"Type -> Type -> Type","prefix":"record","html_id":"Text.ILex.Internal.Types.Machine"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"M","typ":"SortedMap Nat a -> b -> Machine a b","prefix":"","html_id":"Text.ILex.Internal.Types.M"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":".terminals","typ":"Machine a b -> SortedMap Nat a","prefix":"","html_id":"Text.ILex.Internal.Types.Machine.(.terminals)"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"terminals","typ":"Machine a b -> SortedMap Nat a","prefix":"","html_id":"Text.ILex.Internal.Types.Machine.terminals"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.Types.html","package":"ilex","namespace":"Text.ILex.Internal.Types","name":"machine","typ":"Norm a b -> Machine a b","prefix":"","html_id":"Text.ILex.Internal.Types.machine"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"RExpOf","typ":"Bool -> Type -> Type","prefix":"data","html_id":"Text.ILex.RExp.RExpOf"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Eps","typ":"RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.Eps"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Ch","typ":"SetOf t -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.Ch"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"And","typ":"RExpOf b1 t -> RExpOf b2 t -> RExpOf (b1 || Delay b2) t","prefix":"","html_id":"Text.ILex.RExp.And"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Or","typ":"RExpOf b1 t -> RExpOf b2 t -> RExpOf (b1 && Delay b2) t","prefix":"","html_id":"Text.ILex.RExp.Or"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Star","typ":"RExpOf True t -> RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.Star"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"RExp","typ":"Bool -> Type","prefix":"0","html_id":"Text.ILex.RExp.RExp"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"RExp8","typ":"Bool -> Type","prefix":"0","html_id":"Text.ILex.RExp.RExp8"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"IsCh","typ":"RExpOf b t -> Type","prefix":"data","html_id":"Text.ILex.RExp.IsCh"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"ItIsCh","typ":"IsCh (Ch s)","prefix":"","html_id":"Text.ILex.RExp.ItIsCh"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"adjRanges","typ":"(SetOf t -> RExpOf True s) -> RExpOf b t -> RExpOf b s","prefix":"","html_id":"Text.ILex.RExp.adjRanges"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Conv","typ":"Type -> Type","prefix":"data","html_id":"Text.ILex.RExp.Conv"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Ignore","typ":"Conv a","prefix":"","html_id":"Text.ILex.RExp.Ignore"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Const","typ":"a -> Conv a","prefix":"","html_id":"Text.ILex.RExp.Const"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"Txt","typ":"(ByteString -> a) -> Conv a","prefix":"","html_id":"Text.ILex.RExp.Txt"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"const","typ":"(0 _ : a) -> Elab (Val (Conv a))","prefix":"","html_id":"Text.ILex.RExp.const"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"bytes","typ":"(0 _ : (ByteString -> a)) -> Elab (Val (Conv a))","prefix":"","html_id":"Text.ILex.RExp.bytes"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"ignore","typ":"ToType a => Val (Conv a)","prefix":"","html_id":"Text.ILex.RExp.ignore"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"TokenMap","typ":"Type -> Type","prefix":"0","html_id":"Text.ILex.RExp.TokenMap"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"TokenMap8","typ":"Type -> Type","prefix":"0","html_id":"Text.ILex.RExp.TokenMap8"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"orF","typ":"RExpOf (b || Delay False) t -> RExpOf b t","prefix":"","html_id":"Text.ILex.RExp.orF"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"toOrF","typ":"RExpOf b t -> RExpOf (b || Delay False) t","prefix":"","html_id":"Text.ILex.RExp.toOrF"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"chr","typ":"Char -> RExp True","prefix":"","html_id":"Text.ILex.RExp.chr"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"fromChar","typ":"Char -> RExp True","prefix":"","html_id":"Text.ILex.RExp.fromChar"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"not","typ":"Bounded t => Neg t => (r : RExpOf b t) -> {auto 0 _ : IsCh r} -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.not"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"(&&)","typ":"Bounded t => Neg t => (x : RExpOf b t) -> (y : RExpOf b t) -> {auto 0 _ : IsCh x} -> {auto 0 _ : IsCh y} -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.(&&)"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"(||)","typ":"Bounded t => Neg t => (x : RExpOf b t) -> (y : RExpOf b t) -> {auto 0 _ : IsCh x} -> {auto 0 _ : IsCh y} -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.(||)"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"(<|>)","typ":"Bounded t => Neg t => RExpOf b1 t -> RExpOf b2 t -> RExpOf (b1 && Delay b2) t","prefix":"","html_id":"Text.ILex.RExp.(<|>)"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"oneof","typ":"Bounded t => Neg t => (rs : List (RExpOf True t)) -> {auto 0 _ : NonEmpty rs} -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.oneof"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"(>>)","typ":"RExpOf b1 t -> RExpOf b2 t -> RExpOf (b1 || Delay b2) t","prefix":"","html_id":"Text.ILex.RExp.(>>)"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"eps","typ":"RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.eps"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"opt","typ":"RExpOf True t -> RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.opt"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"chars","typ":"(cs : List Char) -> {auto 0 _ : NonEmpty cs} -> RExp True","prefix":"","html_id":"Text.ILex.RExp.chars"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"str","typ":"(s : String) -> {auto 0 _ : NonEmpty (unpack s)} -> RExp True","prefix":"","html_id":"Text.ILex.RExp.str"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"fromString","typ":"(s : String) -> {auto 0 _ : NonEmpty (unpack s)} -> RExp True","prefix":"","html_id":"Text.ILex.RExp.fromString"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"pre","typ":"(s : String) -> {auto 0 _ : NonEmpty (unpack s)} -> RExp b -> RExp True","prefix":"","html_id":"Text.ILex.RExp.pre"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"star","typ":"RExpOf True t -> RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.star"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"plus","typ":"RExpOf True t -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.plus"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"sep1","typ":"RExpOf True t -> RExpOf True t -> RExpOf True t","prefix":"","html_id":"Text.ILex.RExp.sep1"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"sep","typ":"RExpOf True t -> RExpOf True t -> RExpOf False t","prefix":"","html_id":"Text.ILex.RExp.sep"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"nl","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.nl"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"range","typ":"Char -> Char -> RExp True","prefix":"","html_id":"Text.ILex.RExp.range"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"digit","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.digit"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"posdigit","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.posdigit"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"upper","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.upper"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"lower","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.lower"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"alpha","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.alpha"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"alphaNum","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.alphaNum"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"bindigit","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.bindigit"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"octdigit","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.octdigit"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"hexdigit","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.hexdigit"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"control","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.control"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"dot","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.dot"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"binary","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.binary"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"octal","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.octal"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"decimal","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.decimal"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"hexadecimal","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.hexadecimal"},{"html_filename":"ilex/docs/docs/Text.ILex.RExp.html","package":"ilex","namespace":"Text.ILex.RExp","name":"natural","typ":"RExp True","prefix":"","html_id":"Text.ILex.RExp.natural"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"Stepper","typ":"Nat -> Type","prefix":"0","html_id":"Text.ILex.Lexer.Stepper"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"Lexer","typ":"Type -> Type","prefix":"record","html_id":"Text.ILex.Lexer.Lexer"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"L","typ":"(states : Nat) -> Stepper states -> IArray (S states) (Maybe (Conv a)) -> Lexer a","prefix":"","html_id":"Text.ILex.Lexer.L"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":".next","typ":"({rec:0} : Lexer a) -> Stepper (states {rec:0})","prefix":"","html_id":"Text.ILex.Lexer.Lexer.(.next)"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":".states","typ":"Lexer a -> Nat","prefix":"","html_id":"Text.ILex.Lexer.Lexer.(.states)"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":".term","typ":"({rec:0} : Lexer a) -> IArray (S (states {rec:0})) (Maybe (Conv a))","prefix":"","html_id":"Text.ILex.Lexer.Lexer.(.term)"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"states","typ":"Lexer a -> Nat","prefix":"","html_id":"Text.ILex.Lexer.Lexer.states"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"next","typ":"({rec:0} : Lexer a) -> Stepper (states {rec:0})","prefix":"","html_id":"Text.ILex.Lexer.Lexer.next"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"term","typ":"({rec:0} : Lexer a) -> IArray (S (states {rec:0})) (Maybe (Conv a))","prefix":"","html_id":"Text.ILex.Lexer.Lexer.term"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"byteLexer","typ":"(m : TokenMap8 (Conv a)) -> {auto 0 _ : NonEmpty m} -> Lexer a","prefix":"","html_id":"Text.ILex.Lexer.byteLexer"},{"html_filename":"ilex/docs/docs/Text.ILex.Lexer.html","package":"ilex","namespace":"Text.ILex.Lexer","name":"lexer","typ":"(m : TokenMap (Conv a)) -> {auto 0 _ : NonEmpty m} -> Lexer a","prefix":"","html_id":"Text.ILex.Lexer.lexer"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.DFA.html","package":"ilex","namespace":"Text.ILex.Internal.DFA","name":"toDFA","typ":"TokenMap8 a -> Norm a Graph","prefix":"","html_id":"Text.ILex.Internal.DFA.toDFA"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"appLst","typ":"Doc d -> List (Doc d) -> Doc d","prefix":"","html_id":"Text.ILex.Debug.appLst"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"strLst","typ":"String -> List (Doc d) -> Doc d","prefix":"","html_id":"Text.ILex.Debug.strLst"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyNats","typ":"List Nat -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyNats"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyEdge","typ":"Edge -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyEdge"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyENode","typ":"(Nat, ENode) -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyENode"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyNEdge","typ":"NEdge -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyNEdge"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyNNode","typ":"(Nat, NNode) -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyNNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyNode","typ":"(Nat, Node) -> Doc d","prefix":"","html_id":"Text.ILex.Debug.prettyNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyENFA","typ":"Pretty a => TokenMap8 a -> IO ()","prefix":"","html_id":"Text.ILex.Debug.prettyENFA"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyNFA","typ":"Pretty a => TokenMap8 a -> IO ()","prefix":"","html_id":"Text.ILex.Debug.prettyNFA"},{"html_filename":"ilex/docs/docs/Text.ILex.Debug.html","package":"ilex","namespace":"Text.ILex.Debug","name":"prettyDFA","typ":"Pretty a => TokenMap8 a -> IO ()","prefix":"","html_id":"Text.ILex.Debug.prettyDFA"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"Codepoint","typ":"Type","prefix":"record","html_id":"Text.ILex.Char.UTF8.Codepoint"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"CP","typ":"(0 len : Nat) -> Vect (S len) Bits8 -> Codepoint","prefix":"","html_id":"Text.ILex.Char.UTF8.CP"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":".bytes","typ":"({rec:0} : Codepoint) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Codepoint.(.bytes)"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":".len","typ":"Codepoint -> Nat","prefix":"0","html_id":"Text.ILex.Char.UTF8.Codepoint.(.len)"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"len","typ":"Codepoint -> Nat","prefix":"0","html_id":"Text.ILex.Char.UTF8.Codepoint.len"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"bytes","typ":"({rec:0} : Codepoint) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Codepoint.bytes"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"Span","typ":"Type","prefix":"record","html_id":"Text.ILex.Char.UTF8.Span"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"SP","typ":"Vect (S len) Bits8 -> Vect (S len) Bits8 -> Span","prefix":"","html_id":"Text.ILex.Char.UTF8.SP"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":".c1","typ":"({rec:0} : Span) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Span.(.c1)"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":".c2","typ":"({rec:0} : Span) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Span.(.c2)"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"c1","typ":"({rec:0} : Span) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Span.c1"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"c2","typ":"({rec:0} : Span) -> Vect (S (len {rec:0})) Bits8","prefix":"","html_id":"Text.ILex.Char.UTF8.Span.c2"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"toByteRanges","typ":"Set32 -> RExp8 True","prefix":"","html_id":"Text.ILex.Char.UTF8.toByteRanges"},{"html_filename":"ilex/docs/docs/Text.ILex.Char.UTF8.html","package":"ilex","namespace":"Text.ILex.Char.UTF8","name":"toUTF8","typ":"(RExp b, a) -> (RExp8 b, a)","prefix":"","html_id":"Text.ILex.Char.UTF8.toUTF8"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.NFA.html","package":"ilex","namespace":"Text.ILex.Internal.NFA","name":"joinNNode","typ":"NNode -> NNode -> NNode","prefix":"","html_id":"Text.ILex.Internal.NFA.joinNNode"},{"html_filename":"ilex/docs/docs/Text.ILex.Internal.NFA.html","package":"ilex","namespace":"Text.ILex.Internal.NFA","name":"toNFA","typ":"TokenMap8 a -> Norm a NGraph","prefix":"","html_id":"Text.ILex.Internal.NFA.toNFA"}]