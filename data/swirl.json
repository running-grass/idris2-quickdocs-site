[{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.String.html","package":"swirl","namespace":"Data.Swirl.Parsing.String","name":"line","typ":"RawParser m String Void r r Char String","prefix":"","html_id":"Data.Swirl.Parsing.String.line"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Swirl","typ":"(Type -> Type) -> Type -> Type -> Type -> Type","prefix":"data","html_id":"Data.Swirl.Swirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Done","typ":"r -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.Done"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Fail","typ":"e -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.Fail"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Yield","typ":"o -> Lazy (Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.Yield"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Effect","typ":"m (assert_total (Swirl m e r o)) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.Effect"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"BindR","typ":"Lazy (Swirl m e r' o) -> (r' -> Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.BindR"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"BindE","typ":"Lazy (Swirl m e' r o) -> (e' -> Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.BindE"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Ensure","typ":"Lazy (Swirl m Void r' Void) -> Lazy (Swirl m e r o) -> Swirl m e (r', r) o","prefix":"","html_id":"Data.Swirl.Ensure"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Swirlie","typ":"(Type -> Type) -> Type -> Type -> Type","prefix":"","html_id":"Data.Swirl.Swirlie"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapCtx","typ":"Functor m => (m a -> n a) -> Swirl m e r o -> Swirl n e r o","prefix":"","html_id":"Data.Swirl.mapCtx"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapError","typ":"(e -> e') -> Swirl m e r o -> Swirl m e' r o","prefix":"","html_id":"Data.Swirl.mapError"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"concat'","typ":"Functor m => (rl -> rr -> r) -> Swirl m el rl o -> Lazy (Swirl m er rr o) -> Swirl m (Either el er) r o","prefix":"","html_id":"Data.Swirl.ComposeResults.concat'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"concat","typ":"Functor m => (rl -> rr -> r) -> Swirl m e rl o -> Lazy (Swirl m e rr o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.ComposeResults.concat"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"(++)","typ":"Functor m => Semigroup r => Swirl m e r o -> Lazy (Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.(++)"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"andThen","typ":"Swirl m e () o -> Lazy (Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.andThen"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"hasSucceeded","typ":"{auto 0 _ : IfUnsolved m' m} -> {auto 0 _ : IfUnsolved e' Void} -> {auto 0 _ : IfUnsolved o' Void} -> Swirl m e r o -> Maybe (Swirl m' e' r o')","prefix":"","html_id":"Data.Swirl.hasSucceeded"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"forgetO","typ":"Functor m => {auto 0 _ : IfUnsolved o Void} -> Swirl m e r a -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.forgetO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"forgetR","typ":"Functor m => Monoid r => {auto 0 _ : IfUnsolved r ()} -> Swirl m e r' a -> Swirl m e r a","prefix":"","html_id":"Data.Swirl.forgetR"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":".by","typ":"Functor m => (x -> Swirl m e r o) -> m x -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.(.by)"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"by","typ":"Functor m => (x -> Swirl m e r o) -> m x -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.by"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"preEmitTo","typ":"{auto 0 _ : IfUnsolved e Void} -> Lazy (Swirl m e r o) -> o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.preEmitTo"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emit","typ":"Monoid r => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.emit"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"preEmitsTo","typ":"{auto 0 _ : IfUnsolved e Void} -> Lazy (Swirl m e r o) -> LazyList o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.preEmitsTo"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emits","typ":"Monoid r => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> LazyList o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.emits"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"preEmitsTo'","typ":"Foldable f => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved f List} -> Lazy (Swirl m e r o) -> f o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.preEmitsTo'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emits'","typ":"Monoid r => Foldable f => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved f List} -> {auto 0 _ : IfUnsolved r ()} -> f o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.emits'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"succeed","typ":"{auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved o Void} -> r -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.succeed"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"fail","typ":"{auto 0 _ : IfUnsolved r ()} -> {auto 0 _ : IfUnsolved o Void} -> e -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.fail"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"succeedOrFail","typ":"{auto 0 _ : IfUnsolved o Void} -> Either e r -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.succeedOrFail"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emitOrFail","typ":"Monoid r => {auto 0 _ : IfUnsolved r ()} -> Either e o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.emitOrFail"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emitRes'","typ":"Functor m => (r -> r') -> Swirl m e r Void -> Swirl m e r' r","prefix":"","html_id":"Data.Swirl.emitRes'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"emitRes","typ":"Functor m => Monoid r => {auto 0 _ : IfUnsolved r ()} -> Swirl m e r' Void -> Swirl m e r r'","prefix":"","html_id":"Data.Swirl.emitRes"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"swallowM","typ":"Functor m => Swirl m e r (m o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.swallowM"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldlRO","typ":"Functor m => {auto 0 _ : IfUnsolved o'' Void} -> (o' -> o -> o') -> o' -> (o' -> r -> r') -> Swirl m e r o -> Swirl m e r' o''","prefix":"","html_id":"Data.Swirl.ToResult.foldlRO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldlRO'","typ":"Functor m => {auto 0 _ : IfUnsolved o' Void} -> (o -> o -> o) -> (o -> r -> r) -> Swirl m e r o -> Swirl m e r o'","prefix":"","html_id":"Data.Swirl.ToResult.foldlRO'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldRO","typ":"Functor m => Semigroup o => {auto 0 _ : IfUnsolved o' Void} -> Swirl m e o o -> Swirl m e o o'","prefix":"","html_id":"Data.Swirl.ToResult.foldRO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldlO","typ":"Functor m => {auto 0 _ : IfUnsolved o' Void} -> (r -> o -> r) -> r -> Swirl m e () o -> Swirl m e r o'","prefix":"","html_id":"Data.Swirl.ToResult.foldlO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldO","typ":"Functor m => Monoid o => {auto 0 _ : IfUnsolved o' Void} -> Swirl m e () o -> Swirl m e o o'","prefix":"","html_id":"Data.Swirl.ToResult.foldO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"outputs","typ":"Functor m => {auto 0 _ : IfUnsolved o' Void} -> Swirl m e () o -> Swirl m e (SnocList o) o'","prefix":"","html_id":"Data.Swirl.ToResult.outputs"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"foldlO'","typ":"Functor m => (o' -> o -> o') -> o' -> Swirl m e r o -> Swirl m e r o'","prefix":"","html_id":"Data.Swirl.ToOutput.foldlO'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mergeCtxs'","typ":"Applicative m => Applicative n => (r'' -> r' -> r'') -> r'' -> Swirl m e r (Swirl n e' r' o) -> Swirl (m . n) (Either e e') (r, r'') o","prefix":"","html_id":"Data.Swirl.ComposeResults.mergeCtxs'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mergeCtxs","typ":"Applicative m => Applicative n => Semigroup r => Swirl m e r (Swirl n e r o) -> Swirl (m . n) e r o","prefix":"","html_id":"Data.Swirl.mergeCtxs"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"squashOuts'","typ":"Functor m => (r'' -> r' -> r'') -> r'' -> Swirl m e r (Swirl m e' r' o) -> Swirl m (Either e e') (r, r'') o","prefix":"","html_id":"Data.Swirl.ComposeResults.squashOuts'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"bindR","typ":"Swirl m e r' o -> (r' -> Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.bindR"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"handleRes","typ":"(r' -> Swirl m e r o) -> Swirl m e r' o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.handleRes"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapEither'","typ":"Functor m => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> (o -> Either e' o') -> Swirl m e r o -> Swirl m (Either e e') r o'","prefix":"","html_id":"Data.Swirl.mapEither'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapEither","typ":"Functor m => (o -> Either e o') -> Swirl m e r o -> Swirl m e r o'","prefix":"","html_id":"Data.Swirl.mapEither"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapMaybe","typ":"Functor m => (o -> Maybe o') -> Swirl m e r o -> Swirl m e r o'","prefix":"","html_id":"Data.Swirl.mapMaybe"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"filter","typ":"Functor m => (a -> Bool) -> Swirl m e r a -> Swirl m e r a","prefix":"","html_id":"Data.Swirl.filter"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"(=<<:)","typ":"Functor m => (o' -> Swirl m e () o) -> Swirl m e r o' -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.(=<<:)"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"(:>>=)","typ":"Functor m => Swirl m e r o' -> (o' -> Swirl m e () o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.(:>>=)"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"(:>>)","typ":"Functor m => Swirl m e r () -> Lazy (Swirl m e () o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.(:>>)"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"handleError","typ":"{auto 0 _ : IfUnsolved e' Void} -> (e -> Swirl m e' r o) -> Swirl m e r o -> Swirl m e' r o","prefix":"","html_id":"Data.Swirl.handleError"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"withFinally'","typ":"Functor m => Swirl m Void r' Void -> Swirl m e r o -> Swirl m e (r', r) o","prefix":"","html_id":"Data.Swirl.withFinally'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"withFinally","typ":"Functor m => Swirl m Void () Void -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.withFinally"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"bracket'","typ":"Functor m => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved o Void} -> Swirl m e res o -> (res -> Swirl m Void r' Void) -> (res -> Swirl m e r o) -> Swirl m e (r', r) o","prefix":"","html_id":"Data.Swirl.bracket'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"bracket","typ":"Functor m => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved o Void} -> Swirl m e res o -> (res -> Swirl m Void () Void) -> (res -> Swirl m e r o) -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.bracket"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"bracketO","typ":"Functor m => Monoid r => {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> Swirl m e res Void -> (res -> Swirl m Void r Void) -> Swirl m e r res","prefix":"","html_id":"Data.Swirl.bracketO"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"repeat","typ":"Functor m => {auto 0 _ : IfUnsolved e Void} -> Swirl m e () o -> Swirl m e Void o","prefix":"","html_id":"Data.Swirl.repeat"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"tickUntil","typ":"Functor m => Monoid r => {auto 0 _ : IfUnsolved r ()} -> {auto 0 _ : IfUnsolved e Void} -> Swirl m e Bool Void -> Swirl m e r ()","prefix":"","html_id":"Data.Swirl.tickUntil"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"take","typ":"Functor m => Nat -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.take"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"takeWhile","typ":"Functor m => (o -> Bool) -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.takeWhile"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"drop","typ":"Functor m => Nat -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.drop"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"dropWhile","typ":"Functor m => (o -> Bool) -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.dropWhile"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"intersperseOuts","typ":"Functor m => Swirl m e () o -> Swirl m e r o -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.intersperseOuts"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"iterateAlong","typ":"Functor m => (i -> i) -> i -> Swirl m e r o -> Swirl m e r (i, o)","prefix":"","html_id":"Data.Swirl.iterateAlong"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"zipWithIndex","typ":"Functor m => Swirl m e r o -> Swirl m e r (Nat, o)","prefix":"","html_id":"Data.Swirl.zipWithIndex"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"toLazyList'","typ":"Swirl Identity e r o -> (Either e r, Lazy (LazyList o))","prefix":"","html_id":"Data.Swirl.toLazyList'"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"toLazyList","typ":"Swirl Identity Void () o -> LazyList o","prefix":"","html_id":"Data.Swirl.toLazyList"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"runSwirlE","typ":"MonadRec m => Swirl m e r Void -> m (Either e r)","prefix":"","html_id":"Data.Swirl.runSwirlE"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"runSwirl","typ":"MonadRec m => Swirl m Void a Void -> m a","prefix":"","html_id":"Data.Swirl.runSwirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Whirl","typ":"(Type -> Type) -> Type -> Type -> Type -> Type","prefix":"data","html_id":"Data.Swirl.Whirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"MkWhirl","typ":"Swirl m e r o -> Whirl m e o r","prefix":"","html_id":"Data.Swirl.MkWhirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"Whirlie","typ":"(Type -> Type) -> Type -> Type -> Type","prefix":"","html_id":"Data.Swirl.Whirlie"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"toWhirl","typ":"Swirl m e r o -> Whirl m e o r","prefix":"","html_id":"Data.Swirl.toWhirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"toSwirl","typ":"Whirl m e o r -> Swirl m e r o","prefix":"","html_id":"Data.Swirl.toSwirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"mapAsSwirl","typ":"(Swirl m e r o -> Swirl m' e' r' o') -> Whirl m e o r -> Whirl m' e' o' r'","prefix":"","html_id":"Data.Swirl.mapAsSwirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.html","package":"swirl","namespace":"Data.Swirl","name":"apAsSwirl","typ":"(Swirl m1 e1 r1 o1 -> Swirl m2 e2 r2 o2 -> Swirl m e r o) -> Whirl m1 e1 o1 r1 -> Whirl m2 e2 o2 r2 -> Whirl m e o r","prefix":"","html_id":"Data.Swirl.apAsSwirl"},{"html_filename":"swirl/docs/docs/Data.Swirl.System.html","package":"swirl","namespace":"Data.Swirl.System","name":"runSysCmdOLn","typ":"HasIO io => List String -> Swirl io FileError Int String","prefix":"","html_id":"Data.Swirl.System.runSysCmdOLn"},{"html_filename":"swirl/docs/docs/Data.Swirl.System.html","package":"swirl","namespace":"Data.Swirl.System","name":"runSysCmdO","typ":"HasIO io => List String -> Swirl io FileError Int String","prefix":"","html_id":"Data.Swirl.System.runSysCmdO"},{"html_filename":"swirl/docs/docs/Data.Swirl.System.html","package":"swirl","namespace":"Data.Swirl.System","name":"runSysCmdI","typ":"HasIO io => List String -> Swirl io e r String -> Swirl io (Either e FileError) (r, Int) Void","prefix":"","html_id":"Data.Swirl.System.runSysCmdI"},{"html_filename":"swirl/docs/docs/Data.Swirl.System.html","package":"swirl","namespace":"Data.Swirl.System","name":"runSysCmdILn","typ":"HasIO io => List String -> Swirl io e r String -> Swirl io (Either e FileError) (r, Int) Void","prefix":"","html_id":"Data.Swirl.System.runSysCmdILn"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"WhetherConsumeLast","typ":"Type -> Type","prefix":"data","html_id":"Data.Swirl.Parsing.WhetherConsumeLast"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"ConsumeLast","typ":"a -> WhetherConsumeLast a","prefix":"","html_id":"Data.Swirl.Parsing.ConsumeLast"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"DoNotConsumeLast","typ":"a -> WhetherConsumeLast a","prefix":"","html_id":"Data.Swirl.Parsing.DoNotConsumeLast"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":".val","typ":"WhetherConsumeLast a -> a","prefix":"","html_id":"Data.Swirl.Parsing.(.val)"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"ifConsumes","typ":"WhetherConsumeLast a -> Lazy b -> Lazy b -> b","prefix":"","html_id":"Data.Swirl.Parsing.ifConsumes"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"RawParser","typ":"(Type -> Type) -> Type -> Type -> Type -> Type -> Type -> Type -> Type","prefix":"record","html_id":"Data.Swirl.Parsing.RawParser"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"RP","typ":"st -> (o -> st -> Either st (WhetherConsumeLast (Swirl m e' () o'))) -> (st -> r -> Swirl m e' r' o') -> RawParser m st e' r r' o o'","prefix":"","html_id":"Data.Swirl.Parsing.RP"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":".initSeed","typ":"RawParser m st e' r r' o o' -> st","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.(.initSeed)"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":".manageFin","typ":"RawParser m st e' r r' o o' -> st -> r -> Swirl m e' r' o'","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.(.manageFin)"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":".parseStep","typ":"RawParser m st e' r r' o o' -> o -> st -> Either st (WhetherConsumeLast (Swirl m e' () o'))","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.(.parseStep)"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"initSeed","typ":"RawParser m st e' r r' o o' -> st","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.initSeed"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"parseStep","typ":"RawParser m st e' r r' o o' -> o -> st -> Either st (WhetherConsumeLast (Swirl m e' () o'))","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.parseStep"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"manageFin","typ":"RawParser m st e' r r' o o' -> st -> r -> Swirl m e' r' o'","prefix":"","html_id":"Data.Swirl.Parsing.RawParser.manageFin"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"rawParseOnce","typ":"Functor m => {auto 0 _ : IfUnsolved r' ()} -> {auto 0 _ : IfUnsolved o' Void} -> RawParser m st e'' r r' o o' -> Swirl m e r o -> Swirl m (Either e e'') (Either r' (Swirl m e r o)) o'","prefix":"","html_id":"Data.Swirl.Parsing.rawParseOnce"},{"html_filename":"swirl/docs/docs/Data.Swirl.Parsing.html","package":"swirl","namespace":"Data.Swirl.Parsing","name":"rawParseAll","typ":"Functor m => {auto 0 _ : IfUnsolved r' ()} -> {auto 0 _ : IfUnsolved o' Void} -> RawParser m st e' r r' o o' -> Swirl m e r o -> Swirl m (Either e e') r' o'","prefix":"","html_id":"Data.Swirl.Parsing.rawParseAll"},{"html_filename":"swirl/docs/docs/Data.Swirl.Console.html","package":"swirl","namespace":"Data.Swirl.Console","name":"stdinAsChars","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> Swirl io e r Char","prefix":"","html_id":"Data.Swirl.Console.stdinAsChars"},{"html_filename":"swirl/docs/docs/Data.Swirl.Console.html","package":"swirl","namespace":"Data.Swirl.Console","name":"stdinAsLines","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved e Void} -> {auto 0 _ : IfUnsolved r ()} -> Swirl io e r String","prefix":"","html_id":"Data.Swirl.Console.stdinAsLines"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"readAsChars","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved r ()} -> File -> Swirl io FileError r Char","prefix":"","html_id":"Data.Swirl.File.readAsChars"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"readAsLines","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved r ()} -> File -> Swirl io FileError r String","prefix":"","html_id":"Data.Swirl.File.readAsLines"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"readAsChunks","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved r ()} -> Nat -> File -> Swirl io FileError r String","prefix":"","html_id":"Data.Swirl.File.readAsChunks"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"writeStr","typ":"HasIO io => Monoid r => {auto 0 _ : IfUnsolved io IO} -> {auto 0 _ : IfUnsolved r ()} -> {auto 0 _ : IfUnsolved o Void} -> File -> String -> Swirl io FileError r o","prefix":"","html_id":"Data.Swirl.File.writeStr"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"withFile","typ":"HasIO io => Mode -> String -> (File -> Swirl io FileError r o) -> Swirl io FileError r o","prefix":"","html_id":"Data.Swirl.File.withFile"},{"html_filename":"swirl/docs/docs/Data.Swirl.File.html","package":"swirl","namespace":"Data.Swirl.File","name":"withFile'","typ":"HasIO io => Mode -> String -> (File -> Swirl io (Either FileError e) r o) -> Swirl io (Either FileError e) r o","prefix":"","html_id":"Data.Swirl.File.withFile'"}]