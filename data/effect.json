[{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"ListM","typ":"(Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Monad.List.ListM"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"Nil","typ":"ListM m a","prefix":"","html_id":"Control.Monad.List.Nil"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"(::)","typ":"a -> m (ListM m a) -> ListM m a","prefix":"","html_id":"Control.Monad.List.(::)"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"ListT","typ":"(Type -> Type) -> Type -> Type","prefix":"0","html_id":"Control.Monad.List.ListT"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"ListTSemigroup","typ":"Monad m => Semigroup (ListT m a)","prefix":"","html_id":"Control.Monad.List.Semigroup.ListTSemigroup"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"runListT'","typ":"Monad m => ListT m a -> m (Maybe a)","prefix":"","html_id":"Control.Monad.List.runListT'"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"runListT","typ":"Monad m => ListT m a -> m (List a)","prefix":"","html_id":"Control.Monad.List.runListT"},{"html_filename":"effect/docs/docs/Control.Monad.List.html","package":"effect","namespace":"Control.Monad.List","name":"liftList","typ":"Applicative m => List a -> ListT m a","prefix":"","html_id":"Control.Monad.List.liftList"},{"html_filename":"effect/docs/docs/Control.Effect.State.html","package":"effect","namespace":"Control.Effect.State","name":"StateE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Effect.State.StateE"},{"html_filename":"effect/docs/docs/Control.Effect.State.html","package":"effect","namespace":"Control.Effect.State","name":"HintState","typ":"Algebra sig m => Algebra (StateE s :+: sig) (StateT s m)","prefix":"","html_id":"Control.Effect.State.Algebra.HintState"},{"html_filename":"effect/docs/docs/Control.EffectAlgebra.html","package":"effect","namespace":"Control.EffectAlgebra","name":"Algebra","typ":"((Type -> Type) -> Type -> Type) -> (Type -> Type) -> Type","prefix":"interface","html_id":"Control.EffectAlgebra.Algebra"},{"html_filename":"effect/docs/docs/Control.EffectAlgebra.html","package":"effect","namespace":"Control.EffectAlgebra","name":"alg","typ":"Functor ctx => ctx () -> Handler ctx n m -> sig n a -> m (ctx a)","prefix":"","html_id":"Control.EffectAlgebra.alg"},{"html_filename":"effect/docs/docs/Control.EffectAlgebra.html","package":"effect","namespace":"Control.EffectAlgebra","name":"send","typ":"Inj eff sig => Algebra sig m => eff m a -> m a","prefix":"","html_id":"Control.EffectAlgebra.send"},{"html_filename":"effect/docs/docs/Control.Effect.Exception.html","package":"effect","namespace":"Control.Effect.Exception","name":"TryE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.Exception.TryE"},{"html_filename":"effect/docs/docs/Control.Effect.Exception.html","package":"effect","namespace":"Control.Effect.Exception","name":"Try","typ":"m a -> (e -> m a) -> TryE e m a","prefix":"","html_id":"Control.Effect.Exception.Try"},{"html_filename":"effect/docs/docs/Control.Effect.Exception.html","package":"effect","namespace":"Control.Effect.Exception","name":"EitherE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Effect.Exception.EitherE"},{"html_filename":"effect/docs/docs/Control.Effect.Exception.html","package":"effect","namespace":"Control.Effect.Exception","name":"try","typ":"Inj (TryE e) sig => Algebra sig m => m a -> (e -> m a) -> m a","prefix":"","html_id":"Control.Effect.Exception.try"},{"html_filename":"effect/docs/docs/Control.Effect.Exception.html","package":"effect","namespace":"Control.Effect.Exception","name":"AlgebraEither","typ":"Algebra sig m => Algebra (EitherE e :+: sig) (EitherT e m)","prefix":"","html_id":"Control.Effect.Exception.Algebra.AlgebraEither"},{"html_filename":"effect/docs/docs/Control.Cont.Out.html","package":"effect","namespace":"Control.Cont.Out","name":"Out","typ":"Type -> Type","prefix":"data","html_id":"Control.Cont.Out.Out"},{"html_filename":"effect/docs/docs/Control.Cont.Out.html","package":"effect","namespace":"Control.Cont.Out","name":"MkOut","typ":"String -> cnt -> Out cnt","prefix":"","html_id":"Control.Cont.Out.MkOut"},{"html_filename":"effect/docs/docs/Control.Cont.Out.html","package":"effect","namespace":"Control.Cont.Out","name":"HOut","typ":"(Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Cont.Out.HOut"},{"html_filename":"effect/docs/docs/Control.Cont.Out.html","package":"effect","namespace":"Control.Cont.Out","name":"runOut","typ":"Free HOut a -> IO a","prefix":"","html_id":"Control.Cont.Out.runOut"},{"html_filename":"effect/docs/docs/Control.Cont.Out.html","package":"effect","namespace":"Control.Cont.Out","name":"out","typ":"Inj HOut sig => String -> Free sig ()","prefix":"","html_id":"Control.Cont.Out.out"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"(~>)","typ":"(Type -> Type) -> (Type -> Type) -> Type","prefix":"0","html_id":"Control.HigherOrder.(~>)"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"(~~>)","typ":"(Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"0","html_id":"Control.HigherOrder.(~~>)"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"HFunctor","typ":"((Type -> Type) -> Type -> Type) -> Type","prefix":"interface","html_id":"Control.HigherOrder.HFunctor"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"hmap","typ":"(Functor f, Functor g) => f ~> g -> h f ~> h g","prefix":"","html_id":"Control.HigherOrder.hmap"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"(:+:)","typ":"((Type -> Type) -> Type -> Type) -> ((Type -> Type) -> Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.HigherOrder.(:+:)"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Inl","typ":"sig1 m a -> (:+:) sig1 sig2 m a","prefix":"","html_id":"Control.HigherOrder.Inl"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Inr","typ":"sig2 m a -> (:+:) sig1 sig2 m a","prefix":"","html_id":"Control.HigherOrder.Inr"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Prj","typ":"((Type -> Type) -> Type -> Type) -> ((Type -> Type) -> Type -> Type) -> Type","prefix":"interface","html_id":"Control.HigherOrder.Prj"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"prj","typ":"sup m a -> sub m a","prefix":"","html_id":"Control.HigherOrder.prj"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Inj","typ":"((Type -> Type) -> Type -> Type) -> ((Type -> Type) -> Type -> Type) -> Type","prefix":"interface","html_id":"Control.HigherOrder.Inj"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"inj","typ":"sub m a -> sup m a","prefix":"","html_id":"Control.HigherOrder.inj"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"T","typ":"Inj siga sigb -> Inj sigb sigc -> Inj siga sigc","prefix":"","html_id":"Control.HigherOrder.Inj.T"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Handler","typ":"(Type -> Type) -> (Type -> Type) -> (Type -> Type) -> Type","prefix":"0","html_id":"Control.HigherOrder.Handler"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"HandlerX","typ":"(Type -> Type) -> (Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"0","html_id":"Control.HigherOrder.HandlerX"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Syntax","typ":"((Type -> Type) -> Type -> Type) -> Type","prefix":"interface","html_id":"Control.HigherOrder.Syntax"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"emap","typ":"(m a -> m b) -> sig m a -> sig m b","prefix":"","html_id":"Control.HigherOrder.emap"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"weave","typ":"Monad m => Monad n => Functor s => s () -> Handler s m n -> sig m a -> sig n (s a)","prefix":"","html_id":"Control.HigherOrder.weave"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"Lift","typ":"(Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.HigherOrder.Lift"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"MkLift","typ":"sig (m a) -> Lift sig m a","prefix":"","html_id":"Control.HigherOrder.MkLift"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"unlift","typ":"Lift sig m a -> sig (m a)","prefix":"","html_id":"Control.HigherOrder.unlift"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"LiftE","typ":"(Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.HigherOrder.LiftE"},{"html_filename":"effect/docs/docs/Control.HigherOrder.html","package":"effect","namespace":"Control.HigherOrder","name":"(~<~)","typ":"Functor n => Functor ctx1 => HandlerX ctx1 m n q -> HandlerX ctx2 l m t -> HandlerX (ctx1 . ctx2) l n p","prefix":"","html_id":"Control.HigherOrder.(~<~)"},{"html_filename":"effect/docs/docs/Control.Cont.IO.html","package":"effect","namespace":"Control.Cont.IO","name":"HIO","typ":"(Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Cont.IO.HIO"},{"html_filename":"effect/docs/docs/Control.Cont.IO.html","package":"effect","namespace":"Control.Cont.IO","name":"MkHIO","typ":"IO t -> (t -> m a) -> HIO m a","prefix":"","html_id":"Control.Cont.IO.MkHIO"},{"html_filename":"effect/docs/docs/Control.Cont.IO.html","package":"effect","namespace":"Control.Cont.IO","name":"runIO","typ":"Free HIO a -> IO a","prefix":"","html_id":"Control.Cont.IO.runIO"},{"html_filename":"effect/docs/docs/Control.Cont.IO.html","package":"effect","namespace":"Control.Cont.IO","name":"io","typ":"Syntax sig => Inj HIO sig => IO a -> Free sig a","prefix":"","html_id":"Control.Cont.IO.io"},{"html_filename":"effect/docs/docs/Control.Effect.Lift.html","package":"effect","namespace":"Control.Effect.Lift","name":"HintLift","typ":"Monad m => Algebra (Lift m) m","prefix":"","html_id":"Control.Effect.Lift.Algebra.HintLift"},{"html_filename":"effect/docs/docs/Control.Effect.Lift.html","package":"effect","namespace":"Control.Effect.Lift","name":"lift","typ":"Monad n => Inj (Lift n) sig => Algebra sig m => n a -> m a","prefix":"","html_id":"Control.Effect.Lift.lift"},{"html_filename":"effect/docs/docs/Control.Effect.Fail.html","package":"effect","namespace":"Control.Effect.Fail","name":"FailE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.Fail.FailE"},{"html_filename":"effect/docs/docs/Control.Effect.Fail.html","package":"effect","namespace":"Control.Effect.Fail","name":"Fail","typ":"e -> FailE e m a","prefix":"","html_id":"Control.Effect.Fail.Fail"},{"html_filename":"effect/docs/docs/Control.Effect.Fail.html","package":"effect","namespace":"Control.Effect.Fail","name":"fail","typ":"Inj (FailE e) sig => Algebra sig m => e -> m a","prefix":"","html_id":"Control.Effect.Fail.fail"},{"html_filename":"effect/docs/docs/Control.Effect.Fail.html","package":"effect","namespace":"Control.Effect.Fail","name":"fromEither","typ":"Inj (FailE e) sig => Algebra sig m => Either e b -> m b","prefix":"","html_id":"Control.Effect.Fail.fromEither"},{"html_filename":"effect/docs/docs/Control.Effect.Fail.html","package":"effect","namespace":"Control.Effect.Fail","name":"glueFail","typ":"{0 m : Type -> Type} -> Inj (FailE e) sig => (e' -> e) -> (Inj (FailE e') sig => m a) -> m a","prefix":"","html_id":"Control.Effect.Fail.glueFail"},{"html_filename":"effect/docs/docs/Control.Cont.Void.html","package":"effect","namespace":"Control.Cont.Void","name":"VoidC1","typ":"Type -> Type","prefix":"data","html_id":"Control.Cont.Void.VoidC1"},{"html_filename":"effect/docs/docs/Control.Cont.Void.html","package":"effect","namespace":"Control.Cont.Void","name":"VoidC","typ":"(Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Cont.Void.VoidC"},{"html_filename":"effect/docs/docs/Control.Cont.Void.html","package":"effect","namespace":"Control.Cont.Void","name":"VoidE","typ":"(Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Cont.Void.VoidE"},{"html_filename":"effect/docs/docs/Control.Cont.Void.html","package":"effect","namespace":"Control.Cont.Void","name":"runVoidC","typ":"Free VoidC a -> a","prefix":"","html_id":"Control.Cont.Void.runVoidC"},{"html_filename":"effect/docs/docs/Control.Cont.Void.html","package":"effect","namespace":"Control.Cont.Void","name":"AlgebraVoid","typ":"Monad m => Algebra VoidE m","prefix":"","html_id":"Control.Cont.Void.Algebra.AlgebraVoid"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"EitherC","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Cont.Exception.EitherC"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"Throw","typ":"e -> EitherC e m a","prefix":"","html_id":"Control.Cont.Exception.Throw"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"Catch","typ":"m t -> (e -> m t) -> (t -> m a) -> EitherC e m a","prefix":"","html_id":"Control.Cont.Exception.Catch"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"runEitherC","typ":"Syntax sig => Free (EitherC e :+: sig) a -> Free sig (Either e a)","prefix":"","html_id":"Control.Cont.Exception.runEitherC"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"throw","typ":"Inj (EitherC e) sig => e -> Free sig a","prefix":"","html_id":"Control.Cont.Exception.throw"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"catch","typ":"Inj (EitherC e) sig => Free sig a -> (e -> Free sig a) -> Free sig a","prefix":"","html_id":"Control.Cont.Exception.catch"},{"html_filename":"effect/docs/docs/Control.Cont.Exception.html","package":"effect","namespace":"Control.Cont.Exception","name":"orThrow","typ":"Syntax sig => Inj (EitherC e) sig => Maybe a -> Free sig e -> Free sig a","prefix":"","html_id":"Control.Cont.Exception.orThrow"},{"html_filename":"effect/docs/docs/Control.Effect.Misc.html","package":"effect","namespace":"Control.Effect.Misc","name":"FunctorId","typ":"Functor (\\x => x)","prefix":"","html_id":"Control.Effect.Misc.Functor.FunctorId"},{"html_filename":"effect/docs/docs/Control.Effect.Misc.html","package":"effect","namespace":"Control.Effect.Misc","name":"FunctorLeftPair","typ":"Functor (\\{__leftTupleSection:0} => ({__leftTupleSection:0}, s))","prefix":"","html_id":"Control.Effect.Misc.Functor.FunctorLeftPair"},{"html_filename":"effect/docs/docs/Control.Effect.Misc.html","package":"effect","namespace":"Control.Effect.Misc","name":"ApplicativeId","typ":"Applicative (\\x => x)","prefix":"","html_id":"Control.Effect.Misc.Applicative.ApplicativeId"},{"html_filename":"effect/docs/docs/Control.Effect.Misc.html","package":"effect","namespace":"Control.Effect.Misc","name":"MonadId","typ":"Monad (\\x => x)","prefix":"","html_id":"Control.Effect.Misc.Monad.MonadId"},{"html_filename":"effect/docs/docs/Control.Effect.Writer.html","package":"effect","namespace":"Control.Effect.Writer","name":"WriterE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.Writer.WriterE"},{"html_filename":"effect/docs/docs/Control.Effect.Writer.html","package":"effect","namespace":"Control.Effect.Writer","name":"Tell","typ":"w -> WriterE w m ()","prefix":"","html_id":"Control.Effect.Writer.Tell"},{"html_filename":"effect/docs/docs/Control.Effect.Writer.html","package":"effect","namespace":"Control.Effect.Writer","name":"tell","typ":"Inj (WriterE w) sig => Algebra sig m => w -> m ()","prefix":"","html_id":"Control.Effect.Writer.tell"},{"html_filename":"effect/docs/docs/Control.Effect.Reader.html","package":"effect","namespace":"Control.Effect.Reader","name":"ReaderE","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.Reader.ReaderE"},{"html_filename":"effect/docs/docs/Control.Effect.Reader.html","package":"effect","namespace":"Control.Effect.Reader","name":"Ask","typ":"ReaderE r m r","prefix":"","html_id":"Control.Effect.Reader.Ask"},{"html_filename":"effect/docs/docs/Control.Effect.Reader.html","package":"effect","namespace":"Control.Effect.Reader","name":"ask","typ":"Inj (ReaderE r) sig => Algebra sig m => m r","prefix":"","html_id":"Control.Effect.Reader.ask"},{"html_filename":"effect/docs/docs/Control.Effect.Reader.html","package":"effect","namespace":"Control.Effect.Reader","name":"HintReader","typ":"Algebra sig m => Algebra (ReaderE s :+: sig) (ReaderT s m)","prefix":"","html_id":"Control.Effect.Reader.Algebra.HintReader"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"Labelled","typ":"k -> ((Type -> Type) -> Type -> Type) -> (Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.Labelled.Labelled"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"MkLabelled","typ":"sub m a -> Labelled label sub m a","prefix":"","html_id":"Control.Effect.Labelled.MkLabelled"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"runLabelled","typ":"Labelled label sub m a -> sub m a","prefix":"","html_id":"Control.Effect.Labelled.runLabelled"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"InjL","typ":"k -> ((Type -> Type) -> Type -> Type) -> ((Type -> Type) -> Type -> Type) -> Type","prefix":"interface","html_id":"Control.Effect.Labelled.InjL"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"injLabelled","typ":"Labelled label sub m a -> sup m a","prefix":"","html_id":"Control.Effect.Labelled.injLabelled"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"Label","typ":"Inj sub sup -> InjL label sub sup","prefix":"","html_id":"Control.Effect.Labelled.Label"},{"html_filename":"effect/docs/docs/Control.Effect.Labelled.html","package":"effect","namespace":"Control.Effect.Labelled","name":"labelled","typ":"(label : k) -> InjL label sub sig => Algebra sig m => sub m a -> m a","prefix":"","html_id":"Control.Effect.Labelled.labelled"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"Thread","typ":"(Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Cont.Thread.Thread"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"Yield","typ":"m a -> Thread m a","prefix":"","html_id":"Control.Cont.Thread.Yield"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"Fork","typ":"m t -> m a -> Thread m a","prefix":"","html_id":"Control.Cont.Thread.Fork"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"HThread","typ":"(Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Cont.Thread.HThread"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"yield","typ":"Inj Thread sig => Free sig ()","prefix":"","html_id":"Control.Cont.Thread.yield"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"fork","typ":"Inj Thread sig => Free sig a -> Free sig ()","prefix":"","html_id":"Control.Cont.Thread.fork"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"Daemon","typ":"((Type -> Type) -> Type -> Type) -> Type","prefix":"data","html_id":"Control.Cont.Thread.Daemon"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"MkDaemon","typ":"Free (Thread :+: sig) t -> Daemon sig","prefix":"","html_id":"Control.Cont.Thread.MkDaemon"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"SThread","typ":"((Type -> Type) -> Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Cont.Thread.SThread"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"SYield","typ":"Free (Thread :+: sig) r -> SThread sig r","prefix":"","html_id":"Control.Cont.Thread.SYield"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"SFork","typ":"Daemon sig -> Free (Thread :+: sig) r -> SThread sig r","prefix":"","html_id":"Control.Cont.Thread.SFork"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"SActive","typ":"r -> SThread sig r","prefix":"","html_id":"Control.Cont.Thread.SActive"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"thread","typ":"Syntax sig => Handler (SThread sig) (Free (Thread :+: sig)) (Free sig)","prefix":"","html_id":"Control.Cont.Thread.thread"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"runThread","typ":"Syntax sig => Free (Thread :+: sig) a -> Free sig (SThread sig a)","prefix":"","html_id":"Control.Cont.Thread.runThread"},{"html_filename":"effect/docs/docs/Control.Cont.Thread.html","package":"effect","namespace":"Control.Cont.Thread","name":"schedule","typ":"Syntax sig => Free (Thread :+: sig) a -> Free sig a","prefix":"","html_id":"Control.Cont.Thread.schedule"},{"html_filename":"effect/docs/docs/Control.Effect.NonDet.html","package":"effect","namespace":"Control.Effect.NonDet","name":"ChoiceE","typ":"(Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Effect.NonDet.ChoiceE"},{"html_filename":"effect/docs/docs/Control.Effect.NonDet.html","package":"effect","namespace":"Control.Effect.NonDet","name":"Choose","typ":"List (Inf (m a)) -> ChoiceE m a","prefix":"","html_id":"Control.Effect.NonDet.Choose"},{"html_filename":"effect/docs/docs/Control.Effect.NonDet.html","package":"effect","namespace":"Control.Effect.NonDet","name":"Concat","typ":"Algebra sig m => Algebra (ChoiceE :+: sig) (ListT m)","prefix":"","html_id":"Control.Effect.NonDet.Algebra.Concat"},{"html_filename":"effect/docs/docs/Control.Effect.NonDet.html","package":"effect","namespace":"Control.Effect.NonDet","name":"oneOf","typ":"Inj ChoiceE sig => Algebra sig m => List a -> m a","prefix":"","html_id":"Control.Effect.NonDet.oneOf"},{"html_filename":"effect/docs/docs/Control.Effect.NonDet.html","package":"effect","namespace":"Control.Effect.NonDet","name":"oneOfM","typ":"Inj ChoiceE sig => Algebra sig m => List (Inf (m a)) -> m a","prefix":"","html_id":"Control.Effect.NonDet.oneOfM"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"Free","typ":"((Type -> Type) -> Type -> Type) -> Type -> Type","prefix":"data","html_id":"Control.Monad.Free.Free"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"Return","typ":"a -> Free sig a","prefix":"","html_id":"Control.Monad.Free.Return"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"Op","typ":"sig (Free sig) a -> Free sig a","prefix":"","html_id":"Control.Monad.Free.Op"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"return","typ":"a -> Free sig a","prefix":"","html_id":"Control.Monad.Free.return"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"inject","typ":"Inj sub sup => sub (Free sup) a -> Free sup a","prefix":"","html_id":"Control.Monad.Free.inject"},{"html_filename":"effect/docs/docs/Control.Monad.Free.html","package":"effect","namespace":"Control.Monad.Free","name":"project","typ":"Prj sup sub => Free sup a -> Maybe (sub (Free sup) a)","prefix":"","html_id":"Control.Monad.Free.project"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"StateC1","typ":"Type -> Type -> Type","prefix":"data","html_id":"Control.Cont.State.StateC1"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"Get","typ":"(s -> x) -> StateC1 s x","prefix":"","html_id":"Control.Cont.State.Get"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"Put","typ":"s -> x -> StateC1 s x","prefix":"","html_id":"Control.Cont.State.Put"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"StateC","typ":"Type -> (Type -> Type) -> Type -> Type","prefix":"","html_id":"Control.Cont.State.StateC"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"runStateC","typ":"Syntax sig => s -> Free (StateC s :+: sig) a -> Free sig (s, a)","prefix":"","html_id":"Control.Cont.State.runStateC"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"get","typ":"Inj (StateC s) sig => Free sig s","prefix":"","html_id":"Control.Cont.State.get"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"put","typ":"Inj (StateC s) sig => s -> Free sig ()","prefix":"","html_id":"Control.Cont.State.put"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"modify","typ":"Syntax sig => Inj (StateC s) sig => (s -> s) -> Free sig ()","prefix":"","html_id":"Control.Cont.State.modify"},{"html_filename":"effect/docs/docs/Control.Cont.State.html","package":"effect","namespace":"Control.Cont.State","name":"withSt","typ":"Syntax sig => Inj (StateC st) sig => a -> Free sig (st, a)","prefix":"","html_id":"Control.Cont.State.withSt"}]