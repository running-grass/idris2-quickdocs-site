[{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"Step","typ":"(a -> a -> Type) -> a -> Type -> Type -> Type","prefix":"data","html_id":"Control.MonadRec.Step"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"Cont","typ":"(seed2 : a) -> (0 _ : rel seed2 seed) -> st -> Step rel seed st res","prefix":"","html_id":"Control.MonadRec.Cont"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"Done","typ":"res -> Step rel v st res","prefix":"","html_id":"Control.MonadRec.Done"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"MonadRec","typ":"(Type -> Type) -> Type","prefix":"interface","html_id":"Control.MonadRec.MonadRec"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"tailRecM","typ":"(seed : a) -> (0 _ : Accessible rel seed) -> st -> ((seed2 : a) -> st -> m (Step rel seed2 st b)) -> m b","prefix":"","html_id":"Control.MonadRec.tailRecM"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"trWellFounded","typ":"MonadRec m => {auto 0 _ : WellFounded a rel} -> a -> st -> ((seed2 : a) -> st -> m (Step rel seed2 st b)) -> m b","prefix":"","html_id":"Control.MonadRec.trWellFounded"},{"html_filename":"tailrec/docs/docs/Control.MonadRec.html","package":"tailrec","namespace":"Control.MonadRec","name":"trSized","typ":"MonadRec m => {auto 0 {conArg:3251} : Sized a} -> a -> st -> ((v : a) -> st -> m (Step Smaller v st b)) -> m b","prefix":"","html_id":"Control.MonadRec.trSized"},{"html_filename":"tailrec/docs/docs/Data.Iterable.html","package":"tailrec","namespace":"Data.Iterable","name":"Iterable","typ":"Type -> Type -> Type","prefix":"interface","html_id":"Data.Iterable.Iterable"},{"html_filename":"tailrec/docs/docs/Data.Iterable.html","package":"tailrec","namespace":"Data.Iterable","name":"iterM","typ":"MonadRec m => (element -> st -> m st) -> (st -> res) -> st -> container -> m res","prefix":"","html_id":"Data.Iterable.iterM"},{"html_filename":"tailrec/docs/docs/Data.Iterable.html","package":"tailrec","namespace":"Data.Iterable","name":"forM_","typ":"Iterable container element => MonadRec m => (element -> m ()) -> container -> m ()","prefix":"","html_id":"Data.Iterable.forM_"},{"html_filename":"tailrec/docs/docs/Data.Iterable.html","package":"tailrec","namespace":"Data.Iterable","name":"foldM","typ":"Iterable container element => MonadRec m => Monoid mo => (element -> m mo) -> container -> m mo","prefix":"","html_id":"Data.Iterable.foldM"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"traverseList_","typ":"(t -> EitherT e IO ()) -> List t -> EitherT e IO ()","prefix":"","html_id":"Control.Monad.Either.Extra.traverseList_"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"traverseList","typ":"(t -> EitherT e IO a) -> List t -> EitherT e IO (List a)","prefix":"","html_id":"Control.Monad.Either.Extra.traverseList"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"forList_","typ":"List t -> (t -> EitherT e IO ()) -> EitherT e IO ()","prefix":"","html_id":"Control.Monad.Either.Extra.forList_"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"forList","typ":"List t -> (t -> EitherT e IO a) -> EitherT e IO (List a)","prefix":"","html_id":"Control.Monad.Either.Extra.forList"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"traverseSnocList_","typ":"(t -> EitherT e IO ()) -> SnocList t -> EitherT e IO ()","prefix":"","html_id":"Control.Monad.Either.Extra.traverseSnocList_"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"traverseSnocList","typ":"(t -> EitherT e IO a) -> SnocList t -> EitherT e IO (SnocList a)","prefix":"","html_id":"Control.Monad.Either.Extra.traverseSnocList"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"forSnocList_","typ":"SnocList t -> (t -> EitherT e IO ()) -> EitherT e IO ()","prefix":"","html_id":"Control.Monad.Either.Extra.forSnocList_"},{"html_filename":"tailrec/docs/docs/Control.Monad.Either.Extra.html","package":"tailrec","namespace":"Control.Monad.Either.Extra","name":"forSnocList","typ":"SnocList t -> (t -> EitherT e IO a) -> EitherT e IO (SnocList a)","prefix":"","html_id":"Control.Monad.Either.Extra.forSnocList"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"Eval","typ":"Type -> Type","prefix":"data","html_id":"Control.Monad.Eval.Eval"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"Pure","typ":"a -> Eval a","prefix":"","html_id":"Control.Monad.Eval.Pure"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"Bind","typ":"Eval s -> (s -> Eval a) -> Eval a","prefix":"","html_id":"Control.Monad.Eval.Bind"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"lazy","typ":"Lazy a -> Eval a","prefix":"","html_id":"Control.Monad.Eval.lazy"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"defer","typ":"Lazy (Eval a) -> Eval a","prefix":"","html_id":"Control.Monad.Eval.defer"},{"html_filename":"tailrec/docs/docs/Control.Monad.Eval.html","package":"tailrec","namespace":"Control.Monad.Eval","name":"eval","typ":"Eval a -> a","prefix":"","html_id":"Control.Monad.Eval.eval"},{"html_filename":"tailrec/docs/docs/Data.List.TR.html","package":"tailrec","namespace":"Data.List.TR","name":"replicateM","typ":"MonadRec m => Nat -> m a -> m (List a)","prefix":"","html_id":"Data.List.TR.replicateM"},{"html_filename":"tailrec/docs/docs/Data.List.TR.html","package":"tailrec","namespace":"Data.List.TR","name":"replicateTR","typ":"Nat -> a -> List a","prefix":"","html_id":"Data.List.TR.replicateTR"},{"html_filename":"tailrec/docs/docs/Data.List.TR.html","package":"tailrec","namespace":"Data.List.TR","name":"iterateTR","typ":"Nat -> (a -> a) -> a -> List a","prefix":"","html_id":"Data.List.TR.iterateTR"}]