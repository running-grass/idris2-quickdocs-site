[{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"pure","typ":"a -> Tok False e a","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.pure"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"(>>=)","typ":"Tok b1 e a -> (a -> Tok b2 e b) -> Tok (b1 || Delay b2) e b","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.(>>=)"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"(>>)","typ":"Tok b1 e () -> Tok b2 e a -> Tok (b1 || Delay b2) e a","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.(>>)"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"(*>)","typ":"Tok b1 e a -> Tok b2 e b -> Tok (b1 || Delay b2) e b","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.(*>)"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"(<*)","typ":"Tok b1 e a -> Tok b2 e b -> Tok (b1 || Delay b2) e a","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.(<*)"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.Syntax.html","package":"parser","namespace":"Text.Lex.Manual.Syntax","name":"(<*>)","typ":"Tok b1 e (a -> b) -> Tok b2 e a -> Tok (b1 || Delay b2) e b","prefix":"","html_id":"Text.Lex.Manual.Syntax.Tok.(<*>)"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Result0","typ":"Bool -> (t : Type) -> List t -> Type -> Type -> Type","prefix":"data","html_id":"Data.List.Suffix.Result0.Result0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Succ0","typ":"a -> (xs : List t) -> {auto 0 _ : Suffix b xs ts} -> Result0 b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.Succ0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Fail0","typ":"e -> Result0 b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.Fail0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"succ","typ":"a -> (0 _ : Suffix b xs ts) -> Result0 b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.succ"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"fromEither","typ":"(xs : List t) -> {auto 0 _ : Suffix b xs ts} -> Either e a -> Result0 b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.fromEither"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"swapOr","typ":"Result0 (x || Delay y) t ts e a -> Result0 (y || Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.swapOr"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"orSame","typ":"Result0 (x || Delay x) t ts e a -> Result0 x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.orSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"orTrue","typ":"Result0 (x || Delay True) t ts e a -> Result0 True t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.orTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"orFalse","typ":"Result0 (x || Delay False) t ts e a -> Result0 x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.orFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"swapAnd","typ":"Result0 (x && Delay y) t ts e a -> Result0 (y && Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.swapAnd"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"andSame","typ":"Result0 (x && Delay x) t ts e a -> Result0 x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.andSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"andTrue","typ":"Result0 (x && Delay True) t ts e a -> Result0 x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.andTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"andFalse","typ":"Result0 (x && Delay False) t ts e a -> Result0 False t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.andFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"weaken","typ":"Result0 x t ts e a -> Result0 False t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.weaken"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"weakens","typ":"Result0 True t ts e a -> Result0 x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.weakens"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"and1","typ":"Result0 x t ts e a -> Result0 (x && y) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.and1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"and2","typ":"Result0 x t ts e a -> Result0 (y && Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.and2"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"trans","typ":"Result0 b1 t xs e a -> (0 _ : Suffix b2 xs ys) -> Result0 (b1 || Delay b2) t ys e a","prefix":"","html_id":"Data.List.Suffix.Result0.trans"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"succT","typ":"Result0 b1 t xs e a -> {auto 0 _ : Suffix True xs ys} -> Result0 True t ys e a","prefix":"","html_id":"Data.List.Suffix.Result0.succT"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"succF","typ":"Result0 b1 t xs e a -> {auto 0 _ : Suffix True xs ys} -> Result0 False t ys e a","prefix":"","html_id":"Data.List.Suffix.Result0.succF"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"(<|>)","typ":"Result0 b1 t ts e a -> Lazy (Result0 b2 t ts e a) -> Result0 (b1 && Delay b2) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result0.(<|>)"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"run","typ":"((ts : List t) -> Result0 True t ts e a) -> List t -> Either e (List a)","prefix":"","html_id":"Data.List.Suffix.Result0.run"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"runDropWhitespace","typ":"((cs : List Char) -> Result0 True Char cs e a) -> List Char -> Either e (List a)","prefix":"","html_id":"Data.List.Suffix.Result0.runDropWhitespace"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"TokError","typ":"Type -> Type","prefix":"data","html_id":"Data.List.Suffix.Result0.TokError"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"EOI","typ":"TokError t","prefix":"","html_id":"Data.List.Suffix.Result0.EOI"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"ExpectedEOI","typ":"t -> TokError t","prefix":"","html_id":"Data.List.Suffix.Result0.ExpectedEOI"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Unexpected","typ":"t -> TokError t","prefix":"","html_id":"Data.List.Suffix.Result0.Unexpected"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"AutoTok0","typ":"Type -> Type -> Type -> Type","prefix":"0","html_id":"Data.List.Suffix.Result0.AutoTok0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"SafeTok0","typ":"Type -> Type -> Type","prefix":"0","html_id":"Data.List.Suffix.Result0.SafeTok0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"OntoTok0","typ":"Type -> Type -> Type -> Type","prefix":"0","html_id":"Data.List.Suffix.Result0.OntoTok0"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"head","typ":"OntoTok0 t (TokError t) t","prefix":"","html_id":"Data.List.Suffix.Result0.head"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"eoi","typ":"AutoTok0 t (TokError t) ()","prefix":"","html_id":"Data.List.Suffix.Result0.eoi"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeOnto","typ":"SnocList t -> Nat -> AutoTok0 t (TokError t) (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeOnto"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"take","typ":"Nat -> AutoTok0 t (TokError t) (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.take"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"take1","typ":"(n : Nat) -> {auto 0 _ : IsSucc n} -> OntoTok0 t (TokError t) (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.take1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhileOnto","typ":"SnocList t -> (t -> Bool) -> SafeTok0 t (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhileOnto"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhile","typ":"(t -> Bool) -> SafeTok0 t (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhile"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhile1","typ":"(t -> Bool) -> OntoTok0 t (TokError t) (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhile1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeUntil","typ":"(t -> Bool) -> SafeTok0 t (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeUntil"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeUntil1","typ":"(t -> Bool) -> OntoTok0 t (TokError t) (SnocList t)","prefix":"","html_id":"Data.List.Suffix.Result0.takeUntil1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhileJustOnto","typ":"SnocList s -> (t -> Maybe s) -> SafeTok0 t (SnocList s)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhileJustOnto"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhileJust","typ":"(t -> Maybe s) -> SafeTok0 t (SnocList s)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhileJust"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"takeWhileJust1","typ":"(t -> Maybe s) -> OntoTok0 t (TokError t) (SnocList s)","prefix":"","html_id":"Data.List.Suffix.Result0.takeWhileJust1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"accum","typ":"s -> (s -> t -> Maybe s) -> SafeTok0 t s","prefix":"","html_id":"Data.List.Suffix.Result0.accum"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"accum1","typ":"s -> (s -> t -> Maybe s) -> OntoTok0 t (TokError t) s","prefix":"","html_id":"Data.List.Suffix.Result0.accum1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"AccumRes","typ":"Type -> Type -> Type","prefix":"data","html_id":"Data.List.Suffix.Result0.AccumRes"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Done","typ":"AccumRes state err","prefix":"","html_id":"Data.List.Suffix.Result0.Done"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Cont","typ":"state -> AccumRes state err","prefix":"","html_id":"Data.List.Suffix.Result0.Cont"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"Error","typ":"err -> AccumRes state err","prefix":"","html_id":"Data.List.Suffix.Result0.Error"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result0.html","package":"parser","namespace":"Data.List.Suffix.Result0","name":"accumErr","typ":"s -> (s -> x) -> (s -> t -> AccumRes s e) -> AutoTok0 t e x","prefix":"","html_id":"Data.List.Suffix.Result0.accumErr"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Suffix","typ":"Bool -> List a -> List a -> Type","prefix":"data","html_id":"Data.List.Suffix.Suffix"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Same","typ":"Suffix False xs xs","prefix":"","html_id":"Data.List.Suffix.Same"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Uncons","typ":"Suffix b (h :: t) cs -> Suffix b2 t cs","prefix":"","html_id":"Data.List.Suffix.Uncons"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"uncons","typ":"Suffix b (h :: t) cs -> Suffix True t cs","prefix":"","html_id":"Data.List.Suffix.uncons"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"toNat","typ":"Suffix b xs ys -> Nat","prefix":"","html_id":"Data.List.Suffix.toNat"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"swapOr","typ":"Suffix (x || Delay y) xs ys -> Suffix (y || Delay x) xs ys","prefix":"","html_id":"Data.List.Suffix.swapOr"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"orSame","typ":"Suffix (x || Delay x) xs ys -> Suffix x xs ys","prefix":"","html_id":"Data.List.Suffix.orSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"orTrue","typ":"Suffix (x || Delay True) xs ys -> Suffix True xs ys","prefix":"","html_id":"Data.List.Suffix.orTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"orFalse","typ":"Suffix (x || Delay False) xs ys -> Suffix x xs ys","prefix":"","html_id":"Data.List.Suffix.orFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"swapAnd","typ":"Suffix (x && Delay y) xs ys -> Suffix (y && Delay x) xs ys","prefix":"","html_id":"Data.List.Suffix.swapAnd"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"andSame","typ":"Suffix (x && Delay x) xs ys -> Suffix x xs ys","prefix":"","html_id":"Data.List.Suffix.andSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"andTrue","typ":"Suffix (x && Delay True) xs ys -> Suffix x xs ys","prefix":"","html_id":"Data.List.Suffix.andTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"andFalse","typ":"Suffix (x && Delay False) xs ys -> Suffix False xs ys","prefix":"","html_id":"Data.List.Suffix.andFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"weaken","typ":"Suffix b xs ys -> Suffix False xs ys","prefix":"","html_id":"Data.List.Suffix.weaken"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"weakens","typ":"Suffix True xs ys -> Suffix b xs ys","prefix":"","html_id":"Data.List.Suffix.weakens"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"unconsBoth","typ":"Suffix b (y :: ys) (x :: xs) -> Suffix False ys xs","prefix":"","html_id":"Data.List.Suffix.unconsBoth"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"unconsRight","typ":"Suffix True ys (x :: xs) -> Suffix False ys xs","prefix":"","html_id":"Data.List.Suffix.unconsRight"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"and1","typ":"Suffix b1 xs ys -> Suffix (b1 && b2) xs ys","prefix":"","html_id":"Data.List.Suffix.and1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"and2","typ":"Suffix b2 xs ys -> Suffix (b1 && Delay b2) xs ys","prefix":"","html_id":"Data.List.Suffix.and2"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"trans","typ":"Suffix b1 xs ys -> Suffix b2 ys cs -> Suffix (b1 || Delay b2) xs cs","prefix":"","html_id":"Data.List.Suffix.trans"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"SuffixAcc","typ":"List t -> Type","prefix":"data","html_id":"Data.List.Suffix.SuffixAcc"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"SA","typ":"(Suffix True ys ts => SuffixAcc ys) -> SuffixAcc ts","prefix":"","html_id":"Data.List.Suffix.SA"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"suffixAcc","typ":"SuffixAcc ts","prefix":"","html_id":"Data.List.Suffix.suffixAcc"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Link","typ":"List a -> List a -> Type","prefix":"data","html_id":"Data.List.Suffix.Link"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"F","typ":"(0 xs : List {a:2636}) -> {auto 0 _ : Suffix False xs ys} -> Link xs ys","prefix":"","html_id":"Data.List.Suffix.F"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"T","typ":"(0 xs : List {a:2658}) -> {auto 0 _ : Suffix True xs ys} -> Link xs ys","prefix":"","html_id":"Data.List.Suffix.T"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"any","typ":"Suffix b xs ys -> Link xs ys","prefix":"","html_id":"Data.List.Suffix.any"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Chain","typ":"List a -> List a -> Type","prefix":"data","html_id":"Data.List.Suffix.Chain"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Nil","typ":"Chain xs xs","prefix":"","html_id":"Data.List.Suffix.Nil"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"(::)","typ":"(0 _ : Link xs ys) -> (0 _ : Chain ys zs) -> Chain xs zs","prefix":"","html_id":"Data.List.Suffix.(::)"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"IsStrict","typ":"Chain xs ys -> Type","prefix":"data","html_id":"Data.List.Suffix.IsStrict"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"Here","typ":"IsStrict (T xs :: ys)","prefix":"","html_id":"Data.List.Suffix.Here"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"There","typ":"IsStrict c -> IsStrict (l :: c)","prefix":"","html_id":"Data.List.Suffix.There"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"weak","typ":"Chain xs ys -> Suffix False xs ys","prefix":"0","html_id":"Data.List.Suffix.weak"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"strict","typ":"(c : Chain xs ys) -> IsStrict c => Suffix True xs ys","prefix":"0","html_id":"Data.List.Suffix.strict"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"takePrefix","typ":"(ys : List t) -> Suffix b xs ys -> List t","prefix":"","html_id":"Data.List.Suffix.takePrefix"},{"html_filename":"parser/docs/docs/Data.List.Suffix.html","package":"parser","namespace":"Data.List.Suffix","name":"packPrefix","typ":"Suffix b xs cs -> String","prefix":"","html_id":"Data.List.Suffix.packPrefix"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"Result","typ":"Bool -> (t : Type) -> List t -> Type -> Type -> Type","prefix":"data","html_id":"Data.List.Suffix.Result.Result"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"Succ","typ":"a -> (xs : List t) -> Suffix b xs ts => Result b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.Succ"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"Fail","typ":"Suffix False stopStart ts -> (0 errEnd : List t) -> Suffix False errEnd stopStart => e -> Result b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.Fail"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"succ","typ":"a -> Suffix b xs ts -> Result b t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.succ"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"swapOr","typ":"Result (x || Delay y) t ts e a -> Result (y || Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.swapOr"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"orSame","typ":"Result (x || Delay x) t ts e a -> Result x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.orSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"orTrue","typ":"Result (x || Delay True) t ts e a -> Result True t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.orTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"orFalse","typ":"Result (x || Delay False) t ts e a -> Result x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.orFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"swapAnd","typ":"Result (x && Delay y) t ts e a -> Result (y && Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.swapAnd"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"andSame","typ":"Result (x && Delay x) t ts e a -> Result x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.andSame"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"andTrue","typ":"Result (x && Delay True) t ts e a -> Result x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.andTrue"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"andFalse","typ":"Result (x && Delay False) t ts e a -> Result False t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.andFalse"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"weaken","typ":"Result x t ts e a -> Result False t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.weaken"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"weakens","typ":"Result True t ts e a -> Result x t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.weakens"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"and1","typ":"Result x t ts e a -> Result (x && y) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.and1"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"and2","typ":"Result x t ts e a -> Result (y && Delay x) t ts e a","prefix":"","html_id":"Data.List.Suffix.Result.and2"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"trans","typ":"Result b1 t xs e a -> Suffix b2 xs ys -> Result (b1 || Delay b2) t ys e a","prefix":"","html_id":"Data.List.Suffix.Result.trans"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"succT","typ":"Result b1 t xs e a -> Suffix True xs ys => Result True t ys e a","prefix":"","html_id":"Data.List.Suffix.Result.succT"},{"html_filename":"parser/docs/docs/Data.List.Suffix.Result.html","package":"parser","namespace":"Data.List.Suffix.Result","name":"succF","typ":"Result b1 t xs e a -> Suffix True xs ys => Result False t ys e a","prefix":"","html_id":"Data.List.Suffix.Result.succF"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"Position","typ":"Type","prefix":"record","html_id":"Text.Bounds.Position"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"P","typ":"Nat -> Nat -> Position","prefix":"","html_id":"Text.Bounds.P"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":".col","typ":"Position -> Nat","prefix":"","html_id":"Text.Bounds.Position.(.col)"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":".line","typ":"Position -> Nat","prefix":"","html_id":"Text.Bounds.Position.(.line)"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"line","typ":"Position -> Nat","prefix":"","html_id":"Text.Bounds.Position.line"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"col","typ":"Position -> Nat","prefix":"","html_id":"Text.Bounds.Position.col"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"begin","typ":"Position","prefix":"","html_id":"Text.Bounds.begin"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"incCol","typ":"Position -> Position","prefix":"","html_id":"Text.Bounds.incCol"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"incLine","typ":"Position -> Position","prefix":"","html_id":"Text.Bounds.incLine"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"addCol","typ":"Nat -> Position -> Position","prefix":"","html_id":"Text.Bounds.addCol"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"shift","typ":"Position -> Shift b t sx xs sy ys -> Position","prefix":"","html_id":"Text.Bounds.shift"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"move","typ":"Position -> Suffix b xs ys -> Position","prefix":"","html_id":"Text.Bounds.move"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"next","typ":"Char -> Position -> Position","prefix":"","html_id":"Text.Bounds.next"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"Bounds","typ":"Type","prefix":"data","html_id":"Text.Bounds.Bounds"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"BS","typ":"Position -> Position -> Bounds","prefix":"","html_id":"Text.Bounds.BS"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"NoBounds","typ":"Bounds","prefix":"","html_id":"Text.Bounds.NoBounds"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"oneChar","typ":"Position -> Bounds","prefix":"","html_id":"Text.Bounds.Bounds.oneChar"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"Bounded","typ":"Type -> Type","prefix":"record","html_id":"Text.Bounds.Bounded"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"B","typ":"ty -> Bounds -> Bounded ty","prefix":"","html_id":"Text.Bounds.B"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":".bounds","typ":"Bounded ty -> Bounds","prefix":"","html_id":"Text.Bounds.Bounded.(.bounds)"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":".val","typ":"Bounded ty -> ty","prefix":"","html_id":"Text.Bounds.Bounded.(.val)"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"val","typ":"Bounded ty -> ty","prefix":"","html_id":"Text.Bounds.Bounded.val"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"bounds","typ":"Bounded ty -> Bounds","prefix":"","html_id":"Text.Bounds.Bounded.bounds"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"bounded","typ":"a -> Position -> Position -> Bounded a","prefix":"","html_id":"Text.Bounds.bounded"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"app","typ":"Bounded (a -> b) -> Bounded a -> Bounded b","prefix":"","html_id":"Text.Bounds.app"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"bind","typ":"Bounded a -> (a -> Bounded b) -> Bounded b","prefix":"","html_id":"Text.Bounds.bind"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"endPos","typ":"Position -> Suffix b ys cs -> Position","prefix":"","html_id":"Text.Bounds.endPos"},{"html_filename":"parser/docs/docs/Text.Bounds.html","package":"parser","namespace":"Text.Bounds","name":"boundedErr","typ":"Position -> Suffix False errStart ts -> (0 errEnd : List Char) -> Suffix False errEnd errStart => e -> Bounded e","prefix":"","html_id":"Text.Bounds.boundedErr"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"DigitType","typ":"Type","prefix":"data","html_id":"Text.ParseError.DigitType"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Bin","typ":"DigitType","prefix":"","html_id":"Text.ParseError.Bin"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Oct","typ":"DigitType","prefix":"","html_id":"Text.ParseError.Oct"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Dec","typ":"DigitType","prefix":"","html_id":"Text.ParseError.Dec"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Hex","typ":"DigitType","prefix":"","html_id":"Text.ParseError.Hex"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"CharClass","typ":"Type","prefix":"data","html_id":"Text.ParseError.CharClass"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Space","typ":"CharClass","prefix":"","html_id":"Text.ParseError.Space"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Digit","typ":"DigitType -> CharClass","prefix":"","html_id":"Text.ParseError.Digit"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Upper","typ":"CharClass","prefix":"","html_id":"Text.ParseError.Upper"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Lower","typ":"CharClass","prefix":"","html_id":"Text.ParseError.Lower"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Alpha","typ":"CharClass","prefix":"","html_id":"Text.ParseError.Alpha"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"AlphaNum","typ":"CharClass","prefix":"","html_id":"Text.ParseError.AlphaNum"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"ParseError","typ":"Type -> Type -> Type","prefix":"data","html_id":"Text.ParseError.ParseError"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Custom","typ":"e -> ParseError t e","prefix":"","html_id":"Text.ParseError.Custom"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"EOI","typ":"ParseError t e","prefix":"","html_id":"Text.ParseError.EOI"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Expected","typ":"Either String t -> ParseError t e","prefix":"","html_id":"Text.ParseError.Expected"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"ExpectedChar","typ":"CharClass -> ParseError t e","prefix":"","html_id":"Text.ParseError.ExpectedChar"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"ExpectedEOI","typ":"ParseError t e","prefix":"","html_id":"Text.ParseError.ExpectedEOI"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"InvalidControl","typ":"Char -> ParseError t e","prefix":"","html_id":"Text.ParseError.InvalidControl"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"InvalidEscape","typ":"ParseError t e","prefix":"","html_id":"Text.ParseError.InvalidEscape"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"OutOfBounds","typ":"Either String t -> ParseError t e","prefix":"","html_id":"Text.ParseError.OutOfBounds"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Unclosed","typ":"Either String t -> ParseError t e","prefix":"","html_id":"Text.ParseError.Unclosed"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Unexpected","typ":"Either String t -> ParseError t e","prefix":"","html_id":"Text.ParseError.Unexpected"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"Unknown","typ":"Either String t -> ParseError t e","prefix":"","html_id":"Text.ParseError.Unknown"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"FailParse","typ":"(Type -> Type) -> Type -> Type -> Type","prefix":"interface","html_id":"Text.ParseError.FailParse"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"parseFail","typ":"Bounds -> ParseError t e -> m a","prefix":"","html_id":"Text.ParseError.parseFail"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"custom","typ":"FailParse m t e => Bounds -> e -> m a","prefix":"","html_id":"Text.ParseError.custom"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"expected","typ":"FailParse m t e => Bounds -> t -> m a","prefix":"","html_id":"Text.ParseError.expected"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"unclosed","typ":"FailParse m t e => Bounds -> t -> m a","prefix":"","html_id":"Text.ParseError.unclosed"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"unexpected","typ":"FailParse m t e => Bounded t -> m a","prefix":"","html_id":"Text.ParseError.unexpected"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"eoi","typ":"FailParse m t e => m a","prefix":"","html_id":"Text.ParseError.eoi"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"expectedEOI","typ":"FailParse m t e => Bounds -> m a","prefix":"","html_id":"Text.ParseError.expectedEOI"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"printVirtual","typ":"Interpolation a => String -> Bounded a -> String","prefix":"","html_id":"Text.ParseError.printVirtual"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"printParseError","typ":"Interpolation a => String -> FileContext -> a -> String","prefix":"","html_id":"Text.ParseError.printParseError"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"printParseErrors","typ":"Foldable m => Interpolation a => String -> m (FileContext, a) -> String","prefix":"","html_id":"Text.ParseError.printParseErrors"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"failInParen","typ":"Bounds -> t -> Result0 b1 (Bounded t) ts (Bounded (ParseError t y)) a -> Result0 b2 (Bounded t) ts (Bounded (ParseError t y)) x","prefix":"","html_id":"Text.ParseError.failInParen"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"failInParenEOI","typ":"Bounds -> t -> (t -> Bool) -> Result0 b1 (Bounded t) ts (Bounded (ParseError t y)) a -> Result0 b2 (Bounded t) ts (Bounded (ParseError t y)) x","prefix":"","html_id":"Text.ParseError.failInParenEOI"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"fail","typ":"List (Bounded t) -> Result0 b (Bounded t) ts (Bounded (ParseError t y)) a","prefix":"","html_id":"Text.ParseError.fail"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"result","typ":"Origin -> Result0 b (Bounded t) ts (Bounded (ParseError t e)) a -> Either (FileContext, ParseError t e) a","prefix":"","html_id":"Text.ParseError.result"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"left","typ":"Either e Void -> Either e a","prefix":"","html_id":"Text.ParseError.left"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"voidLeft","typ":"ParseError Void e -> ParseError t e","prefix":"","html_id":"Text.ParseError.voidLeft"},{"html_filename":"parser/docs/docs/Text.ParseError.html","package":"parser","namespace":"Text.ParseError","name":"fromVoid","typ":"ParseError Void Void -> ParseError t e","prefix":"","html_id":"Text.ParseError.fromVoid"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"Res","typ":"Bool -> (t : Type) -> List (Bounded t) -> Type -> Type -> Type","prefix":"0","html_id":"Text.Parse.Manual.Res"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"Grammar","typ":"Bool -> Type -> Type -> Type -> Type","prefix":"0","html_id":"Text.Parse.Manual.Grammar"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"AccGrammar","typ":"Bool -> Type -> Type -> Type -> Type","prefix":"0","html_id":"Text.Parse.Manual.AccGrammar"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"acc","typ":"AccGrammar b t e a -> Grammar b t e a","prefix":"","html_id":"Text.Parse.Manual.acc"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"swapOr","typ":"Grammar (x || Delay y) t e a -> Grammar (y || Delay x) t e a","prefix":"","html_id":"Text.Parse.Manual.swapOr"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"orSame","typ":"Grammar (x || Delay x) t e a -> Grammar x t e a","prefix":"","html_id":"Text.Parse.Manual.orSame"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"orTrue","typ":"Grammar (x || Delay True) t e a -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Manual.orTrue"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"orFalse","typ":"Grammar (x || Delay False) t e a -> Grammar x t e a","prefix":"","html_id":"Text.Parse.Manual.orFalse"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"swapAnd","typ":"Grammar (x && Delay y) t e a -> Grammar (y && Delay x) t e a","prefix":"","html_id":"Text.Parse.Manual.swapAnd"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"andSame","typ":"Grammar (x && Delay x) t e a -> Grammar x t e a","prefix":"","html_id":"Text.Parse.Manual.andSame"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"andTrue","typ":"Grammar (x && Delay True) t e a -> Grammar x t e a","prefix":"","html_id":"Text.Parse.Manual.andTrue"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"andFalse","typ":"Grammar (x && Delay False) t e a -> Grammar False t e a","prefix":"","html_id":"Text.Parse.Manual.andFalse"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"terminal","typ":"(t -> Maybe a) -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Manual.terminal"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"terminalE","typ":"(t -> Either e a) -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Manual.terminalE"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"exact","typ":"Eq t => t -> Grammar True t e ()","prefix":"","html_id":"Text.Parse.Manual.exact"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"peek","typ":"Grammar False t e t","prefix":"","html_id":"Text.Parse.Manual.peek"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"nextIs","typ":"(t -> Bool) -> Grammar False t e t","prefix":"","html_id":"Text.Parse.Manual.nextIs"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"nextEquals","typ":"Eq t => t -> Grammar False t e t","prefix":"","html_id":"Text.Parse.Manual.nextEquals"},{"html_filename":"parser/docs/docs/Text.Parse.Manual.html","package":"parser","namespace":"Text.Parse.Manual","name":"testParse","typ":"Show a => Interpolation e => (Origin -> String -> Either (FileContext, e) a) -> String -> IO ()","prefix":"","html_id":"Text.Parse.Manual.testParse"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"Tokenizer","typ":"Type -> Type -> Type","prefix":"data","html_id":"Text.Lex.Tokenizer.Tokenizer"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"Direct","typ":"Tok True e tt -> Tokenizer e tt","prefix":"","html_id":"Text.Lex.Tokenizer.Direct"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"Compose","typ":"Tok True e (tt, tag) -> Inf (tag -> Tokenizer e tt) -> (tag -> Tok True e tt) -> Tokenizer e tt","prefix":"","html_id":"Text.Lex.Tokenizer.Compose"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"(<|>)","typ":"Tokenizer e tt -> Lazy (Tokenizer e tt) -> Tokenizer e tt","prefix":"","html_id":"Text.Lex.Tokenizer.(<|>)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"choiceMap","typ":"(a -> Tokenizer e tt) -> (as : List a) -> {auto 0 _ : NonEmpty as} -> Tokenizer e tt","prefix":"","html_id":"Text.Lex.Tokenizer.choiceMap"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"choice","typ":"(rs : List (Tokenizer e tt)) -> {auto 0 _ : NonEmpty rs} -> Tokenizer e tt","prefix":"","html_id":"Text.Lex.Tokenizer.choice"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"TokRes","typ":"Bool -> List Char -> Type -> Type -> Type","prefix":"record","html_id":"Text.Lex.Tokenizer.TokRes"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"TR","typ":"Position -> SnocList (Bounded a) -> Maybe r -> (rem : List Char) -> (0 _ : Suffix strict rem cs) -> TokRes strict cs r a","prefix":"","html_id":"Text.Lex.Tokenizer.TR"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":".pos","typ":"TokRes strict cs r a -> Position","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.(.pos)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":".reason","typ":"TokRes strict cs r a -> Maybe r","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.(.reason)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":".rem","typ":"TokRes strict cs r a -> List Char","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.(.rem)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":".suf","typ":"({rec:0} : TokRes strict cs r a) -> Suffix strict (rem {rec:0}) cs","prefix":"0","html_id":"Text.Lex.Tokenizer.TokRes.(.suf)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":".toks","typ":"TokRes strict cs r a -> SnocList (Bounded a)","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.(.toks)"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"pos","typ":"TokRes strict cs r a -> Position","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.pos"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"toks","typ":"TokRes strict cs r a -> SnocList (Bounded a)","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.toks"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"reason","typ":"TokRes strict cs r a -> Maybe r","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.reason"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"rem","typ":"TokRes strict cs r a -> List Char","prefix":"","html_id":"Text.Lex.Tokenizer.TokRes.rem"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"suf","typ":"({rec:0} : TokRes strict cs r a) -> Suffix strict (rem {rec:0}) cs","prefix":"0","html_id":"Text.Lex.Tokenizer.TokRes.suf"},{"html_filename":"parser/docs/docs/Text.Lex.Tokenizer.html","package":"parser","namespace":"Text.Lex.Tokenizer","name":"lex","typ":"Tokenizer e a -> (s : String) -> TokRes False (unpack s) (Bounded (ParseError a e)) a","prefix":"","html_id":"Text.Lex.Tokenizer.lex"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"swapOr","typ":"(0 p : (Bool -> Type)) -> p (x || Delay y) -> p (y || Delay x)","prefix":"","html_id":"Data.Bool.Rewrite.swapOr"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"orSame","typ":"(0 p : (Bool -> Type)) -> p (x || Delay x) -> p x","prefix":"","html_id":"Data.Bool.Rewrite.orSame"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"orTrue","typ":"(0 p : (Bool -> Type)) -> p (x || Delay True) -> p True","prefix":"","html_id":"Data.Bool.Rewrite.orTrue"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"orFalse","typ":"(0 p : (Bool -> Type)) -> p (x || Delay False) -> p x","prefix":"","html_id":"Data.Bool.Rewrite.orFalse"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"swapAnd","typ":"(0 p : (Bool -> Type)) -> p (x && Delay y) -> p (y && Delay x)","prefix":"","html_id":"Data.Bool.Rewrite.swapAnd"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"andSame","typ":"(0 p : (Bool -> Type)) -> p (x && Delay x) -> p x","prefix":"","html_id":"Data.Bool.Rewrite.andSame"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"andTrue","typ":"(0 p : (Bool -> Type)) -> p (x && Delay True) -> p x","prefix":"","html_id":"Data.Bool.Rewrite.andTrue"},{"html_filename":"parser/docs/docs/Data.Bool.Rewrite.html","package":"parser","namespace":"Data.Bool.Rewrite","name":"andFalse","typ":"(0 p : (Bool -> Type)) -> p (x && Delay False) -> p False","prefix":"","html_id":"Data.Bool.Rewrite.andFalse"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"Recognise","typ":"Bool -> Type","prefix":"data","html_id":"Text.Lex.Core.Recognise"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"Lift","typ":"Shifter b -> Recognise b","prefix":"","html_id":"Text.Lex.Core.Lift"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"(<+>)","typ":"Recognise b1 -> Recognise b2 -> Recognise (b1 || Delay b2)","prefix":"","html_id":"Text.Lex.Core.(<+>)"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"(<++>)","typ":"Recognise True -> Inf (Recognise b) -> Recognise True","prefix":"","html_id":"Text.Lex.Core.(<++>)"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"(<|>)","typ":"Recognise b1 -> Lazy (Recognise b2) -> Recognise (b1 && Delay b2)","prefix":"","html_id":"Text.Lex.Core.(<|>)"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"swapOr","typ":"Recognise (x || Delay y) -> Recognise (y || Delay x)","prefix":"","html_id":"Text.Lex.Core.swapOr"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"orSame","typ":"Recognise (x || Delay x) -> Recognise x","prefix":"","html_id":"Text.Lex.Core.orSame"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"orTrue","typ":"Recognise (x || Delay True) -> Recognise True","prefix":"","html_id":"Text.Lex.Core.orTrue"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"orFalse","typ":"Recognise (x || Delay False) -> Recognise x","prefix":"","html_id":"Text.Lex.Core.orFalse"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"swapAnd","typ":"Recognise (x && Delay y) -> Recognise (y && Delay x)","prefix":"","html_id":"Text.Lex.Core.swapAnd"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"andSame","typ":"Recognise (x && Delay x) -> Recognise x","prefix":"","html_id":"Text.Lex.Core.andSame"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"andTrue","typ":"Recognise (x && Delay True) -> Recognise x","prefix":"","html_id":"Text.Lex.Core.andTrue"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"andFalse","typ":"Recognise (x && Delay False) -> Recognise False","prefix":"","html_id":"Text.Lex.Core.andFalse"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"autoLift","typ":"AutoShift b -> Recognise b","prefix":"","html_id":"Text.Lex.Core.autoLift"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"Lexer","typ":"Type","prefix":"0","html_id":"Text.Lex.Core.Lexer"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"run","typ":"Recognise b -> (st : SnocList Char) -> (ts : List Char) -> (0 _ : SuffixAcc ts) -> ShiftRes b st ts","prefix":"","html_id":"Text.Lex.Core.run"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"empty","typ":"Recognise False","prefix":"","html_id":"Text.Lex.Core.empty"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"opt","typ":"Recognise True -> Recognise False","prefix":"","html_id":"Text.Lex.Core.opt"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"expect","typ":"Recognise b -> Recognise False","prefix":"","html_id":"Text.Lex.Core.expect"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"reject","typ":"Recognise b -> Recognise False","prefix":"","html_id":"Text.Lex.Core.reject"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"seqSame","typ":"Recognise b -> Recognise b -> Recognise b","prefix":"","html_id":"Text.Lex.Core.seqSame"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"altSame","typ":"Recognise b -> Recognise b -> Recognise b","prefix":"","html_id":"Text.Lex.Core.altSame"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"fail","typ":"Recognise True","prefix":"","html_id":"Text.Lex.Core.fail"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"many","typ":"Recognise True -> Recognise False","prefix":"","html_id":"Text.Lex.Core.many"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"some","typ":"Recognise True -> Recognise True","prefix":"","html_id":"Text.Lex.Core.some"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"pred","typ":"(Char -> Bool) -> Recognise True","prefix":"","html_id":"Text.Lex.Core.pred"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"preds","typ":"(Char -> Bool) -> Recognise True","prefix":"","html_id":"Text.Lex.Core.preds"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"preds0","typ":"(Char -> Bool) -> Recognise False","prefix":"","html_id":"Text.Lex.Core.preds0"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"concatMap","typ":"(a -> Recognise c) -> (xs : List a) -> {auto 0 _ : NonEmpty xs} -> Recognise c","prefix":"","html_id":"Text.Lex.Core.concatMap"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"choiceMap","typ":"Foldable t => (a -> Recognise True) -> t a -> Recognise True","prefix":"","html_id":"Text.Lex.Core.choiceMap"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"choice","typ":"Foldable t => t (Recognise True) -> Recognise True","prefix":"","html_id":"Text.Lex.Core.choice"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"TokenMap","typ":"Type -> Type","prefix":"0","html_id":"Text.Lex.Core.TokenMap"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"step","typ":"Recognise True -> (SnocList Char -> a) -> Tok True e a","prefix":"","html_id":"Text.Lex.Core.step"},{"html_filename":"parser/docs/docs/Text.Lex.Core.html","package":"parser","namespace":"Text.Lex.Core","name":"first","typ":"(ps : TokenMap a) -> {auto 0 _ : NonEmpty ps} -> Tok True e a","prefix":"","html_id":"Text.Lex.Core.first"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"ShiftRes","typ":"Bool -> SnocList Char -> List Char -> Type","prefix":"data","html_id":"Text.Lex.Shift.ShiftRes"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"Succ","typ":"(post : List Char) -> Shift b Char pre post st ts => ShiftRes b st ts","prefix":"","html_id":"Text.Lex.Shift.Succ"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"Stop","typ":"Shift False Char se errStart st ts -> (0 errEnd : List Char) -> Shift False Char ee errEnd se errStart => ParseError Void Void -> ShiftRes b st ts","prefix":"","html_id":"Text.Lex.Shift.Stop"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"suffix","typ":"(SnocList Char -> a) -> ShiftRes True [<] cs -> LexRes True cs e a","prefix":"","html_id":"Text.Lex.Shift.suffix"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"swapOr","typ":"ShiftRes (x || Delay y) st ts -> ShiftRes (y || Delay x) st ts","prefix":"","html_id":"Text.Lex.Shift.swapOr"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"orSame","typ":"ShiftRes (x || Delay x) st ts -> ShiftRes x st ts","prefix":"","html_id":"Text.Lex.Shift.orSame"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"orTrue","typ":"ShiftRes (x || Delay True) st ts -> ShiftRes True st ts","prefix":"","html_id":"Text.Lex.Shift.orTrue"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"orFalse","typ":"ShiftRes (x || Delay False) st ts -> ShiftRes x st ts","prefix":"","html_id":"Text.Lex.Shift.orFalse"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"swapAnd","typ":"ShiftRes (x && Delay y) st ts -> ShiftRes (y && Delay x) st ts","prefix":"","html_id":"Text.Lex.Shift.swapAnd"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"andSame","typ":"ShiftRes (x && Delay x) st ts -> ShiftRes x st ts","prefix":"","html_id":"Text.Lex.Shift.andSame"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"andTrue","typ":"ShiftRes (x && Delay True) st ts -> ShiftRes x st ts","prefix":"","html_id":"Text.Lex.Shift.andTrue"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"andFalse","typ":"ShiftRes (x && Delay False) st ts -> ShiftRes False st ts","prefix":"","html_id":"Text.Lex.Shift.andFalse"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"weaken","typ":"ShiftRes x st ts -> ShiftRes False st ts","prefix":"","html_id":"Text.Lex.Shift.weaken"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"weakens","typ":"ShiftRes True st ts -> ShiftRes x st ts","prefix":"","html_id":"Text.Lex.Shift.weakens"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"and1","typ":"ShiftRes x st ts -> ShiftRes (x && y) st ts","prefix":"","html_id":"Text.Lex.Shift.and1"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"and2","typ":"ShiftRes x st ts -> ShiftRes (y && Delay x) st ts","prefix":"","html_id":"Text.Lex.Shift.and2"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"trans","typ":"ShiftRes b1 sx xs -> Shift b2 Char sx xs sy ys -> ShiftRes (b1 || Delay b2) sy ys","prefix":"","html_id":"Text.Lex.Shift.trans"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"(<|>)","typ":"ShiftRes b1 sx xs -> Lazy (ShiftRes b2 sx xs) -> ShiftRes (b1 && Delay b2) sx xs","prefix":"","html_id":"Text.Lex.Shift.(<|>)"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"Shifter","typ":"Bool -> Type","prefix":"0","html_id":"Text.Lex.Shift.Shifter"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"AutoShift","typ":"Bool -> Type","prefix":"0","html_id":"Text.Lex.Shift.AutoShift"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"range","typ":"ParseError Void Void -> Shift b1 Char ruc cur giro orig -> (0 rest : List Char) -> Shift False Char tser rest ruc cur => ShiftRes b2 giro orig","prefix":"","html_id":"Text.Lex.Shift.range"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"invalidEscape","typ":"Shift b1 Char ruc cur giro orig -> (0 rest : List Char) -> Shift False Char tser rest ruc cur => ShiftRes b2 giro orig","prefix":"","html_id":"Text.Lex.Shift.invalidEscape"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"unknownRange","typ":"Shift b1 Char ruc cur giro orig -> (0 rest : List Char) -> Shift False Char tser rest ruc cur => ShiftRes b2 giro orig","prefix":"","html_id":"Text.Lex.Shift.unknownRange"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"single","typ":"ParseError Void Void -> Shift b Char ruc (c :: errEnd) giro orig -> ShiftRes bres giro orig","prefix":"","html_id":"Text.Lex.Shift.single"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"unknown","typ":"Shift b Char ruc (c :: errEnd) giro orig -> ShiftRes bres giro orig","prefix":"","html_id":"Text.Lex.Shift.unknown"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"failCharClass","typ":"CharClass -> Shift b Char ruc (c :: errEnd) giro orig -> ShiftRes bres giro orig","prefix":"","html_id":"Text.Lex.Shift.failCharClass"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"failDigit","typ":"DigitType -> Shift b Char ruc (c :: errEnd) giro orig -> ShiftRes bres giro orig","prefix":"","html_id":"Text.Lex.Shift.failDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"eoiAt","typ":"Shift b1 Char ruc [] giro orig -> ShiftRes b2 giro orig","prefix":"","html_id":"Text.Lex.Shift.eoiAt"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"eoi","typ":"Shifter False","prefix":"","html_id":"Text.Lex.Shift.eoi"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"fail","typ":"Shifter True","prefix":"","html_id":"Text.Lex.Shift.fail"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"one","typ":"(Char -> Bool) -> AutoShift True","prefix":"","html_id":"Text.Lex.Shift.one"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"takeWhile","typ":"(Char -> Bool) -> AutoShift False","prefix":"","html_id":"Text.Lex.Shift.takeWhile"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"takeWhile1","typ":"(Char -> Bool) -> AutoShift True","prefix":"","html_id":"Text.Lex.Shift.takeWhile1"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"takeUntil","typ":"(Char -> Bool) -> AutoShift False","prefix":"","html_id":"Text.Lex.Shift.takeUntil"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"takeUntil1","typ":"(Char -> Bool) -> AutoShift True","prefix":"","html_id":"Text.Lex.Shift.takeUntil1"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"digits","typ":"AutoShift False","prefix":"","html_id":"Text.Lex.Shift.digits"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"digits1","typ":"AutoShift True","prefix":"","html_id":"Text.Lex.Shift.digits1"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"int","typ":"AutoShift True","prefix":"","html_id":"Text.Lex.Shift.int"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"intPlus","typ":"AutoShift True","prefix":"","html_id":"Text.Lex.Shift.intPlus"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"number","typ":"Shifter True","prefix":"","html_id":"Text.Lex.Shift.number"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"double","typ":"Tok True e Double","prefix":"","html_id":"Text.Lex.Shift.double"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"take","typ":"(n : Nat) -> {auto 0 _ : IsSucc n} -> AutoShift True","prefix":"","html_id":"Text.Lex.Shift.take"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"tail","typ":"AutoShift True","prefix":"","html_id":"Text.Lex.Shift.tail"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"exact","typ":"(ts : List Char) -> {auto 0 _ : NonEmpty ts} -> AutoShift True","prefix":"","html_id":"Text.Lex.Shift.exact"},{"html_filename":"parser/docs/docs/Text.Lex.Shift.html","package":"parser","namespace":"Text.Lex.Shift","name":"string","typ":"Shifter True","prefix":"","html_id":"Text.Lex.Shift.string"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"pure","typ":"a -> Grammar False t e a","prefix":"","html_id":"Text.Parse.Syntax.pure"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"(<*>)","typ":"Grammar b1 t e (a -> b) -> Grammar b2 t e a -> Grammar (b1 || Delay b2) t e b","prefix":"","html_id":"Text.Parse.Syntax.(<*>)"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"(*>)","typ":"Grammar b1 t e () -> Grammar b2 t e a -> Grammar (b1 || Delay b2) t e a","prefix":"","html_id":"Text.Parse.Syntax.(*>)"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"seqt","typ":"Grammar b t e () -> Grammar True t e a -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Syntax.seqt"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"(<*)","typ":"Grammar b1 t e a -> Grammar b2 t e () -> Grammar (b1 || Delay b2) t e a","prefix":"","html_id":"Text.Parse.Syntax.(<*)"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"before","typ":"Eq t => Grammar b t e a -> t -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Syntax.before"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"after","typ":"Eq t => t -> Grammar b t e a -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Syntax.after"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"between","typ":"Eq t => t -> t -> Grammar b t e a -> Grammar True t e a","prefix":"","html_id":"Text.Parse.Syntax.between"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"optional","typ":"Grammar b t e a -> Grammar False t e (Maybe a)","prefix":"","html_id":"Text.Parse.Syntax.optional"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"manyOnto","typ":"(ParseError t e -> Bool) -> Grammar True t e a -> SnocList a -> AccGrammar False t e (List a)","prefix":"","html_id":"Text.Parse.Syntax.manyOnto"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"manyF","typ":"(ParseError t e -> Bool) -> Grammar True t e a -> Grammar False t e (List a)","prefix":"","html_id":"Text.Parse.Syntax.manyF"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"many","typ":"Grammar True t e a -> Grammar False t e (List a)","prefix":"","html_id":"Text.Parse.Syntax.many"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"someF","typ":"(ParseError t e -> Bool) -> Grammar True t e a -> Grammar True t e (List1 a)","prefix":"","html_id":"Text.Parse.Syntax.someF"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"some","typ":"Grammar True t e a -> Grammar True t e (List1 a)","prefix":"","html_id":"Text.Parse.Syntax.some"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"sepByF1","typ":"(ParseError t e -> Bool) -> Grammar b t e () -> Grammar True t e a -> Grammar True t e (List1 a)","prefix":"","html_id":"Text.Parse.Syntax.sepByF1"},{"html_filename":"parser/docs/docs/Text.Parse.Syntax.html","package":"parser","namespace":"Text.Parse.Syntax","name":"sepByExact1","typ":"Eq t => Eq e => t -> Grammar True t e a -> Grammar True t e (List1 a)","prefix":"","html_id":"Text.Parse.Syntax.sepByExact1"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"Origin","typ":"Type","prefix":"data","html_id":"Text.FC.Origin"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"FileSrc","typ":"String -> Origin","prefix":"","html_id":"Text.FC.FileSrc"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"Virtual","typ":"Origin","prefix":"","html_id":"Text.FC.Virtual"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"FileContext","typ":"Type","prefix":"record","html_id":"Text.FC.FileContext"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"FC","typ":"Origin -> Bounds -> FileContext","prefix":"","html_id":"Text.FC.FC"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":".bounds","typ":"FileContext -> Bounds","prefix":"","html_id":"Text.FC.FileContext.(.bounds)"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":".origin","typ":"FileContext -> Origin","prefix":"","html_id":"Text.FC.FileContext.(.origin)"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"origin","typ":"FileContext -> Origin","prefix":"","html_id":"Text.FC.FileContext.origin"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"bounds","typ":"FileContext -> Bounds","prefix":"","html_id":"Text.FC.FileContext.bounds"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"fromBounded","typ":"Origin -> Bounded a -> (FileContext, a)","prefix":"","html_id":"Text.FC.fromBounded"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"virtualFromBounded","typ":"Bounded a -> (FileContext, a)","prefix":"","html_id":"Text.FC.virtualFromBounded"},{"html_filename":"parser/docs/docs/Text.FC.html","package":"parser","namespace":"Text.FC","name":"printFC","typ":"FileContext -> List String -> List String","prefix":"","html_id":"Text.FC.printFC"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"Shift","typ":"Bool -> (t : Type) -> SnocList t -> List t -> SnocList t -> List t -> Type","prefix":"data","html_id":"Data.List.Shift.Shift"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"Same","typ":"Shift False t sx xs sx xs","prefix":"","html_id":"Data.List.Shift.Same"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"SH","typ":"Shift b1 t sx (x :: xs) sy ys -> Shift b2 t (sx :< x) xs sy ys","prefix":"","html_id":"Data.List.Shift.SH"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"shift","typ":"Shift b t sc (x :: xs) giro orig -> Shift True t (sc :< x) xs giro orig","prefix":"","html_id":"Data.List.Shift.shift"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"toNat","typ":"Shift b t sx xs sy ys -> Nat","prefix":"","html_id":"Data.List.Shift.toNat"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"swapOr","typ":"Shift (x || Delay y) t sx xs sy ys -> Shift (y || Delay x) t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.swapOr"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"orSame","typ":"Shift (x || Delay x) t sx xs sy ys -> Shift x t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.orSame"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"orTrue","typ":"Shift (x || Delay True) t sx xs sy ys -> Shift True t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.orTrue"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"orFalse","typ":"Shift (x || Delay False) t sx xs sy ys -> Shift x t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.orFalse"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"swapAnd","typ":"Shift (x && Delay y) t sx xs sy ys -> Shift (y && Delay x) t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.swapAnd"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"andSame","typ":"Shift (x && Delay x) t sx xs sy ys -> Shift x t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.andSame"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"andTrue","typ":"Shift (x && Delay True) t sx xs sy ys -> Shift x t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.andTrue"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"andFalse","typ":"Shift (x && Delay False) t sx xs sy ys -> Shift False t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.andFalse"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"weaken","typ":"Shift b t sx xs sy ys -> Shift False t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.weaken"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"weakens","typ":"Shift True t sx xs sy ys -> Shift b t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.weakens"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"suffix","typ":"Shift b t sx xs sy ys -> Suffix b xs ys","prefix":"","html_id":"Data.List.Shift.suffix"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"and1","typ":"Shift b1 t sx xs sy ys -> Shift (b1 && b2) t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.and1"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"and2","typ":"Shift b2 t sx xs sy ys -> Shift (b1 && Delay b2) t sx xs sy ys","prefix":"","html_id":"Data.List.Shift.and2"},{"html_filename":"parser/docs/docs/Data.List.Shift.html","package":"parser","namespace":"Data.List.Shift","name":"trans","typ":"Shift b1 t sx xs sy ys -> Shift b2 t sy ys sz zs -> Shift (b1 || Delay b2) t sx xs sz zs","prefix":"","html_id":"Data.List.Shift.trans"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Res","typ":"Bool -> (t : Type) -> List (Bounded t) -> Type -> Type -> Type -> Type","prefix":"data","html_id":"Text.Parse.Core.Res"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Fail","typ":"Bool -> List1 (Bounded (ParseError t e)) -> Res b t ts state e a","prefix":"","html_id":"Text.Parse.Core.Fail"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Succ","typ":"state -> Bounded a -> (toks : List (Bounded t)) -> Suffix b toks ts -> Res b t ts state e a","prefix":"","html_id":"Text.Parse.Core.Succ"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"merge","typ":"Bounded z -> Res b t ts s e a -> Res b t ts s e a","prefix":"","html_id":"Text.Parse.Core.merge"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"succ","typ":"Res b t ts s e a -> Suffix True ts ts' -> Res b1 t ts' s e a","prefix":"","html_id":"Text.Parse.Core.succ"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"inf","typ":"Bool -> Type -> Type","prefix":"0","html_id":"Text.Parse.Core.inf"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Grammar","typ":"Bool -> Type -> Type -> Type -> Type -> Type","prefix":"data","html_id":"Text.Parse.Core.Grammar"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Lift","typ":"(state -> (ts : List (Bounded t)) -> Res b t ts state e a) -> Grammar b state t e a","prefix":"","html_id":"Text.Parse.Core.Lift"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"AppEat","typ":"Grammar True state t e (a -> b) -> Inf (Grammar b2 state t e a) -> Grammar True state t e b","prefix":"","html_id":"Text.Parse.Core.AppEat"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"App","typ":"Grammar b1 state t e (a -> b) -> Grammar b2 state t e a -> Grammar (b1 || Delay b2) state t e b","prefix":"","html_id":"Text.Parse.Core.App"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"BindEat","typ":"Grammar True state t e a -> Inf (a -> Grammar b2 state t e b) -> Grammar True state t e b","prefix":"","html_id":"Text.Parse.Core.BindEat"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(>>=)","typ":"Grammar b1 state t e a -> (a -> Grammar b2 state t e b) -> Grammar (b1 || Delay b2) state t e b","prefix":"","html_id":"Text.Parse.Core.(>>=)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"ThenEat","typ":"Grammar True state t e a -> Inf (Grammar b2 state t e b) -> Grammar True state t e b","prefix":"","html_id":"Text.Parse.Core.ThenEat"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(>>)","typ":"Grammar b1 state t e a -> Grammar b2 state t e b -> Grammar (b1 || Delay b2) state t e b","prefix":"","html_id":"Text.Parse.Core.(>>)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Alt","typ":"Grammar b1 state t e a -> Lazy (Grammar b2 state t e a) -> Grammar (b1 && Delay b2) state t e a","prefix":"","html_id":"Text.Parse.Core.Alt"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Bounds","typ":"Grammar b state t e a -> Grammar b state t e (Bounded a)","prefix":"","html_id":"Text.Parse.Core.Bounds"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"Try","typ":"Grammar b state t e a -> Grammar b state t e a","prefix":"","html_id":"Text.Parse.Core.Try"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(<|>)","typ":"Grammar b1 state t e a -> Lazy (Grammar b2 state t e a) -> Grammar (b1 && Delay b2) state t e a","prefix":"","html_id":"Text.Parse.Core.(<|>)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"pure","typ":"a -> Grammar False state t e a","prefix":"","html_id":"Text.Parse.Core.pure"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(<*>)","typ":"Grammar b1 state t e (a -> b) -> inf b1 (Grammar b2 state t e a) -> Grammar (b1 || Delay b2) state t e b","prefix":"","html_id":"Text.Parse.Core.(<*>)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(*>)","typ":"Grammar b1 state t e a -> Grammar b2 state t e b -> Grammar (b1 || Delay b2) state t e b","prefix":"","html_id":"Text.Parse.Core.(*>)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"(<*)","typ":"Grammar b1 state t e a -> Grammar b2 state t e b -> Grammar (b1 || Delay b2) state t e a","prefix":"","html_id":"Text.Parse.Core.(<*)"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"nextIs","typ":"Lazy e -> (t -> Bool) -> Grammar False s t e t","prefix":"","html_id":"Text.Parse.Core.nextIs"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"peek","typ":"Grammar False s t e t","prefix":"","html_id":"Text.Parse.Core.peek"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"readHead","typ":"(t -> Either (ParseError t e) a) -> Grammar True s t e a","prefix":"","html_id":"Text.Parse.Core.readHead"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"terminal","typ":"(t -> Maybe a) -> Grammar True s t e a","prefix":"","html_id":"Text.Parse.Core.terminal"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"is","typ":"Eq t => t -> Grammar True s t e ()","prefix":"","html_id":"Text.Parse.Core.is"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"option","typ":"a -> Grammar b state t e a -> Grammar False state t e a","prefix":"","html_id":"Text.Parse.Core.option"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"optional","typ":"Grammar b state t e a -> Grammar False state t e (Maybe a)","prefix":"","html_id":"Text.Parse.Core.optional"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"some","typ":"Grammar True s t e a -> Grammar True s t e (List1 a)","prefix":"","html_id":"Text.Parse.Core.some"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"many","typ":"Grammar True s t e a -> Grammar False s t e (List a)","prefix":"","html_id":"Text.Parse.Core.many"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"someTill","typ":"Grammar b s t e x -> Grammar True s t e a -> Grammar True s t e (List1 a)","prefix":"","html_id":"Text.Parse.Core.someTill"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"manyTill","typ":"Grammar b s t e x -> Grammar True s t e a -> Grammar b s t e (List a)","prefix":"","html_id":"Text.Parse.Core.manyTill"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"afterSome","typ":"Grammar True s t e x -> Grammar b s t e a -> Grammar True s t e a","prefix":"","html_id":"Text.Parse.Core.afterSome"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"afterMany","typ":"Grammar True s t e x -> Grammar b s t e a -> Grammar b s t e a","prefix":"","html_id":"Text.Parse.Core.afterMany"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"sepBy1","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar b s t e (List1 a)","prefix":"","html_id":"Text.Parse.Core.sepBy1"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"sepBy","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar False s t e (List a)","prefix":"","html_id":"Text.Parse.Core.sepBy"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"sepEndBy1","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar b s t e (List1 a)","prefix":"","html_id":"Text.Parse.Core.sepEndBy1"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"sepEndBy","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar False s t e (List a)","prefix":"","html_id":"Text.Parse.Core.sepEndBy"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"endBy1","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar True s t e (List1 a)","prefix":"","html_id":"Text.Parse.Core.endBy1"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"endBy","typ":"Grammar True s t e s -> Grammar b s t e a -> Grammar False s t e (List a)","prefix":"","html_id":"Text.Parse.Core.endBy"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"between","typ":"Grammar True s t e l -> Grammar True s t e r -> Grammar b s t e a -> Grammar True s t e a","prefix":"","html_id":"Text.Parse.Core.between"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"parse","typ":"Grammar b state t e a -> state -> List (Bounded t) -> Either (List1 (Bounded (ParseError t e))) (state, (a, List (Bounded t)))","prefix":"","html_id":"Text.Parse.Core.parse"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"lexFull","typ":"Origin -> Tokenizer e t -> (t -> Bool) -> String -> Either (Bounded (ParseError t e)) (List (Bounded t))","prefix":"","html_id":"Text.Parse.Core.lexFull"},{"html_filename":"parser/docs/docs/Text.Parse.Core.html","package":"parser","namespace":"Text.Parse.Core","name":"lexAndParse","typ":"Origin -> Tokenizer e t -> (t -> Bool) -> Grammar b state t e a -> state -> String -> Either (List1 (FileContext, ParseError t e)) (state, a)","prefix":"","html_id":"Text.Parse.Core.lexAndParse"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"stripQuotes","typ":"SnocList Char -> String","prefix":"","html_id":"Text.Lex.Util.stripQuotes"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"ltrim","typ":"List Char -> List Char","prefix":"","html_id":"Text.Lex.Util.List.ltrim"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"countHashtag","typ":"List Char -> Nat","prefix":"","html_id":"Text.Lex.Util.List.countHashtag"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"rtrim","typ":"SnocList Char -> SnocList Char","prefix":"","html_id":"Text.Lex.Util.SnocList.rtrim"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"dropHead","typ":"Nat -> SnocList Char -> List Char","prefix":"","html_id":"Text.Lex.Util.SnocList.dropHead"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"any","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.any"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"non","typ":"Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.non"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"is","typ":"Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.is"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"isNot","typ":"Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.isNot"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"space","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.space"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"digit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.digit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"like","typ":"Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.like"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"notLike","typ":"Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.notLike"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"oneOf","typ":"List Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.oneOf"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"range","typ":"Char -> Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.range"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"prefixBy","typ":"List (Char -> Bool) -> Lexer","prefix":"","html_id":"Text.Lex.Util.prefixBy"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"exact","typ":"String -> Lexer","prefix":"","html_id":"Text.Lex.Util.exact"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"approx","typ":"String -> Lexer","prefix":"","html_id":"Text.Lex.Util.approx"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"digits","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.digits"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"symbol","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.symbol"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"symbols","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.symbols"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"control","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.control"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"controls","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.controls"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"someOf","typ":"List Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.someOf"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"ranges","typ":"Char -> Char -> Lexer","prefix":"","html_id":"Text.Lex.Util.ranges"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"spaces","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.spaces"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"spaceChars","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.spaceChars"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"newline","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.newline"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"manyTillNewline","typ":"Recognise False","prefix":"","html_id":"Text.Lex.Util.manyTillNewline"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"manyTillLineFeed","typ":"Recognise False","prefix":"","html_id":"Text.Lex.Util.manyTillLineFeed"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"lineComment","typ":"Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.lineComment"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"linefeedComment","typ":"Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.linefeedComment"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"atLeast","typ":"(n : Nat) -> Lexer -> Recognise (isSucc n)","prefix":"","html_id":"Text.Lex.Util.atLeast"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"exactly","typ":"(n : Nat) -> Lexer -> {auto 0 _ : IsSucc n} -> Lexer","prefix":"","html_id":"Text.Lex.Util.exactly"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"manyUntil","typ":"Recognise c -> Lexer -> Recognise False","prefix":"","html_id":"Text.Lex.Util.manyUntil"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"someUntil","typ":"Recognise c -> Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.someUntil"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"manyThen","typ":"Recognise c -> Lexer -> Recognise c","prefix":"","html_id":"Text.Lex.Util.manyThen"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"surround","typ":"Lexer -> Lexer -> Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.surround"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"quote","typ":"Lexer -> Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.quote"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"escape","typ":"Lexer -> Lexer -> Lexer","prefix":"","html_id":"Text.Lex.Util.escape"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"stringLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.stringLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"intLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.intLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"intLitPlus","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.intLitPlus"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"binDigits","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.binDigits"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"hexDigits","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.hexDigits"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"octDigits","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.octDigits"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"binLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.binLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"hexLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.hexLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"octLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.octLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"digitsUnderscoredLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.digitsUnderscoredLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"binUnderscoredLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.binUnderscoredLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"hexUnderscoredLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.hexUnderscoredLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"octUnderscoredLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.octUnderscoredLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"charLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.charLit"},{"html_filename":"parser/docs/docs/Text.Lex.Util.html","package":"parser","namespace":"Text.Lex.Util","name":"doubleLit","typ":"Lexer","prefix":"","html_id":"Text.Lex.Util.doubleLit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"LexRes","typ":"Bool -> List Char -> Type -> Type -> Type","prefix":"0","html_id":"Text.Lex.Manual.LexRes"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"(<|>)","typ":"Result b t ts r a -> Lazy (Result b t ts r a) -> Result b t ts r a","prefix":"","html_id":"Text.Lex.Manual.(<|>)"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"isSpaceChar","typ":"Char -> Bool","prefix":"","html_id":"Text.Lex.Manual.isSpaceChar"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"isLineFeed","typ":"Char -> Bool","prefix":"","html_id":"Text.Lex.Manual.isLineFeed"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"octDigit","typ":"Char -> Nat","prefix":"","html_id":"Text.Lex.Manual.octDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"digit","typ":"Char -> Nat","prefix":"","html_id":"Text.Lex.Manual.digit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"hexDigit","typ":"Char -> Nat","prefix":"","html_id":"Text.Lex.Manual.hexDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"isBinDigit","typ":"Char -> Bool","prefix":"","html_id":"Text.Lex.Manual.isBinDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"binDigit","typ":"Char -> Nat","prefix":"","html_id":"Text.Lex.Manual.binDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"Tok","typ":"Bool -> Type -> Type -> Type","prefix":"0","html_id":"Text.Lex.Manual.Tok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"AutoTok","typ":"Type -> Type -> Type","prefix":"0","html_id":"Text.Lex.Manual.AutoTok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"SafeTok","typ":"Type -> Type","prefix":"0","html_id":"Text.Lex.Manual.SafeTok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"StrictTok","typ":"Type -> Type -> Type","prefix":"0","html_id":"Text.Lex.Manual.StrictTok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"tok","typ":"StrictTok e a -> Tok True e a","prefix":"","html_id":"Text.Lex.Manual.tok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"autoTok","typ":"StrictTok e a -> AutoTok e a","prefix":"","html_id":"Text.Lex.Manual.autoTok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"safeTok","typ":"SafeTok a -> AutoTok e a","prefix":"","html_id":"Text.Lex.Manual.safeTok"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"range","typ":"ParseError Void e -> Suffix b errBegin orig -> (0 errEnd : List Char) -> Suffix False errEnd errBegin => LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.range"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"invalidEscape","typ":"Suffix b errBegin orig -> (0 errEnd : List Char) -> Suffix False errEnd errBegin => LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.invalidEscape"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"unknownRange","typ":"Suffix b errBegin orig -> (0 errEnd : List Char) -> Suffix False errEnd errBegin => LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.unknownRange"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"single","typ":"ParseError Void e -> Suffix b (c :: errEnd) orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.single"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"unknown","typ":"Suffix b (c :: errEnd) orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.unknown"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"eoiAt","typ":"Suffix b [] orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.eoiAt"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"failCharClass","typ":"CharClass -> Suffix b (c :: errEnd) orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.failCharClass"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"failDigit","typ":"DigitType -> Suffix b (c :: errEnd) orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.failDigit"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"fail","typ":"Suffix b errBegin orig -> LexRes bres orig e a","prefix":"","html_id":"Text.Lex.Manual.fail"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"dec1","typ":"Nat -> SafeTok Nat","prefix":"","html_id":"Text.Lex.Manual.dec1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"dec","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.dec"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"dec_1","typ":"Nat -> AutoTok e Nat","prefix":"","html_id":"Text.Lex.Manual.dec_1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"decSep","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.decSep"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"bin1","typ":"Nat -> SafeTok Nat","prefix":"","html_id":"Text.Lex.Manual.bin1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"bin","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.bin"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"bin_1","typ":"Nat -> AutoTok e Nat","prefix":"","html_id":"Text.Lex.Manual.bin_1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"binSep","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.binSep"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"oct1","typ":"Nat -> SafeTok Nat","prefix":"","html_id":"Text.Lex.Manual.oct1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"oct","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.oct"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"oct_1","typ":"Nat -> AutoTok e Nat","prefix":"","html_id":"Text.Lex.Manual.oct_1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"octSep","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.octSep"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"hex1","typ":"Nat -> SafeTok Nat","prefix":"","html_id":"Text.Lex.Manual.hex1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"hex","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.hex"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"hex_1","typ":"Nat -> AutoTok e Nat","prefix":"","html_id":"Text.Lex.Manual.hex_1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"hexSep","typ":"StrictTok e Nat","prefix":"","html_id":"Text.Lex.Manual.hexSep"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"int","typ":"StrictTok e Integer","prefix":"","html_id":"Text.Lex.Manual.int"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"intPlus","typ":"StrictTok e Integer","prefix":"","html_id":"Text.Lex.Manual.intPlus"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"takeJustOnto","typ":"SnocList y -> (Char -> Maybe y) -> SafeTok (SnocList y)","prefix":"","html_id":"Text.Lex.Manual.takeJustOnto"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"takeJust","typ":"(Char -> Maybe y) -> SafeTok (SnocList y)","prefix":"","html_id":"Text.Lex.Manual.takeJust"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"takeJust1","typ":"(Char -> Maybe y) -> StrictTok e (SnocList y)","prefix":"","html_id":"Text.Lex.Manual.takeJust1"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"singleLineDropSpaces","typ":"Tok True e a -> String -> Either (Bounded (ParseError Void e)) (List (Bounded a))","prefix":"","html_id":"Text.Lex.Manual.singleLineDropSpaces"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"multiLineDropSpaces","typ":"Tok True e a -> String -> Either (Bounded (ParseError Void e)) (List (Bounded a))","prefix":"","html_id":"Text.Lex.Manual.multiLineDropSpaces"},{"html_filename":"parser/docs/docs/Text.Lex.Manual.html","package":"parser","namespace":"Text.Lex.Manual","name":"lexManual","typ":"Tok True e a -> String -> Either (Bounded (ParseError Void e)) (List (Bounded a))","prefix":"","html_id":"Text.Lex.Manual.lexManual"}]