[{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"I","typ":"Type -> Type","prefix":"","html_id":"Data.SOP.Utils.I"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"K","typ":"Type -> k -> Type","prefix":"","html_id":"Data.SOP.Utils.K"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"SingletonList","typ":"List a -> Type","prefix":"data","html_id":"Data.SOP.Utils.SingletonList"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"IsSingletonList","typ":"(v : a) -> SingletonList [v]","prefix":"","html_id":"Data.SOP.Utils.IsSingletonList"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"singletonList","typ":"(vs : List a) -> Dec (SingletonList vs)","prefix":"","html_id":"Data.SOP.Utils.singletonList"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UpdateOnce","typ":"k -> k -> List k -> List k -> Type","prefix":"data","html_id":"Data.SOP.Utils.UpdateOnce"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UpdateHere","typ":"UpdateOnce t t' (t :: ks) (t' :: ks)","prefix":"","html_id":"Data.SOP.Utils.UpdateHere"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UpdateThere","typ":"UpdateOnce t t' ks ks' -> UpdateOnce t t' (k :: ks) (k :: ks')","prefix":"","html_id":"Data.SOP.Utils.UpdateThere"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UpdateMany","typ":"k -> k -> List k -> List k -> Type","prefix":"data","html_id":"Data.SOP.Utils.UpdateMany"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UMNil","typ":"UpdateMany t t' [] []","prefix":"","html_id":"Data.SOP.Utils.UMNil"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UMConsSame","typ":"UpdateMany t t' ks ks' -> UpdateMany t t' (t :: ks) (t' :: ks')","prefix":"","html_id":"Data.SOP.Utils.UMConsSame"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"UMConsDiff","typ":"UpdateMany t t' ks ks' -> UpdateMany t t' (k :: ks) (k :: ks')","prefix":"","html_id":"Data.SOP.Utils.UMConsDiff"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"Sublist","typ":"List k -> List k -> Type","prefix":"data","html_id":"Data.SOP.Utils.Sublist"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"SLNil","typ":"Sublist [] ks'","prefix":"","html_id":"Data.SOP.Utils.SLNil"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"SLSame","typ":"Sublist ks ks' -> Sublist (k :: ks) (k :: ks')","prefix":"","html_id":"Data.SOP.Utils.SLSame"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"SLDiff","typ":"Sublist ks ks' -> Sublist ks (k :: ks')","prefix":"","html_id":"Data.SOP.Utils.SLDiff"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"EnumType","typ":"List (List k) -> Type","prefix":"data","html_id":"Data.SOP.Utils.EnumType"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"EZ","typ":"EnumType []","prefix":"","html_id":"Data.SOP.Utils.EZ"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"ES","typ":"EnumType kss -> EnumType ([] :: kss)","prefix":"","html_id":"Data.SOP.Utils.ES"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"enumTail","typ":"EnumType (ks :: kss) -> EnumType kss","prefix":"0","html_id":"Data.SOP.Utils.enumTail"},{"html_filename":"sop/docs/docs/Data.SOP.Utils.html","package":"sop","namespace":"Data.SOP.Utils","name":"dispStringList","typ":"List String -> String","prefix":"","html_id":"Data.SOP.Utils.dispStringList"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"NS_","typ":"(k : Type) -> (k -> Type) -> List k -> Type","prefix":"data","html_id":"Data.SOP.NS.NS_"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"Z","typ":"f t -> NS_ k f (t :: ks)","prefix":"","html_id":"Data.SOP.NS.Z"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"S","typ":"NS_ k f ks -> NS_ k f (t :: ks)","prefix":"","html_id":"Data.SOP.NS.S"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"NS","typ":"(k -> Type) -> List k -> Type","prefix":"","html_id":"Data.SOP.NS.NS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"toI","typ":"NS_ k f ks -> NS I (map f ks)","prefix":"","html_id":"Data.SOP.NS.toI"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"mapNS","typ":"(f a -> g a) -> NS f ks -> NS g ks","prefix":"","html_id":"Data.SOP.NS.mapNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"foldlNS","typ":"(acc -> el -> acc) -> acc -> NS (K el) ks -> acc","prefix":"","html_id":"Data.SOP.NS.foldlNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"foldrNS","typ":"(el -> Lazy acc -> acc) -> Lazy acc -> NS (K el) ks -> acc","prefix":"","html_id":"Data.SOP.NS.foldrNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"sequenceNS","typ":"Applicative g => NS (\\a => g (f a)) ks -> g (NS f ks)","prefix":"","html_id":"Data.SOP.NS.sequenceNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"hapNS","typ":"NP (\\a => f a -> g a) ks -> NS f ks -> NS g ks","prefix":"","html_id":"Data.SOP.NS.hapNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"collapseNS","typ":"NS (K a) ks -> a","prefix":"","html_id":"Data.SOP.NS.collapseNS"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"Injection","typ":"(k -> Type) -> List k -> k -> Type","prefix":"0","html_id":"Data.SOP.NS.Injection"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"injectionsNP","typ":"NP g ks -> NP (Injection f ks) ks","prefix":"","html_id":"Data.SOP.NS.injectionsNP"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"injections","typ":"NP (Injection f ks) ks","prefix":"","html_id":"Data.SOP.NS.injections"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"apInjsNP_","typ":"NP f ks -> NP (K (NS f ks)) ks","prefix":"","html_id":"Data.SOP.NS.apInjsNP_"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"apInjsNP","typ":"NP f ks -> List (NS f ks)","prefix":"","html_id":"Data.SOP.NS.apInjsNP"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"inject","typ":"f t -> Elem t ks => NS f ks","prefix":"","html_id":"Data.SOP.NS.inject"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"extract","typ":"(0 t : k) -> NS f ks -> Elem t ks => Maybe (f t)","prefix":"","html_id":"Data.SOP.NS.extract"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"toNP","typ":"Alternative g => NS f ks -> NP (g . f) ks","prefix":"","html_id":"Data.SOP.NS.toNP"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"expand","typ":"NS f ks -> Sublist ks ks' => NS f ks'","prefix":"","html_id":"Data.SOP.NS.expand"},{"html_filename":"sop/docs/docs/Data.SOP.NS.html","package":"sop","namespace":"Data.SOP.NS","name":"narrow","typ":"NS f ks -> Sublist ks' ks => Maybe (NS f ks')","prefix":"","html_id":"Data.SOP.NS.narrow"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"Generic","typ":"Type -> List (List Type) -> Type","prefix":"interface","html_id":"Generics.SOP.Generic"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"from","typ":"t -> SOP I code","prefix":"","html_id":"Generics.SOP.from"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"to","typ":"SOP I code -> t","prefix":"","html_id":"Generics.SOP.to"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"fromToId","typ":"(v : t) -> to (from v) = v","prefix":"","html_id":"Generics.SOP.fromToId"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"toFromId","typ":"(v : SOP I code) -> from (to v) = v","prefix":"","html_id":"Generics.SOP.toFromId"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"fromInjective","typ":"{auto {conArg:13388} : Generic t code} -> (0 x : t) -> (0 y : t) -> from x = from y -> x = y","prefix":"","html_id":"Generics.SOP.fromInjective"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"Code","typ":"(t : Type) -> Generic t code => List (List Type)","prefix":"0","html_id":"Generics.SOP.Code"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genExtract","typ":"(0 ts : List Type) -> t -> Generic t code => Elem ts code => Maybe (NP I ts)","prefix":"","html_id":"Generics.SOP.genExtract"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genExtract1","typ":"(0 t' : Type) -> t -> Generic t code => Elem [t'] code => Maybe t'","prefix":"","html_id":"Generics.SOP.genExtract1"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"valuesNP","typ":"Generic t code => EnumType code => NP_ (List Type) (K t) code","prefix":"","html_id":"Generics.SOP.valuesNP"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"values","typ":"Generic t code => EnumType code => List t","prefix":"","html_id":"Generics.SOP.values"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"valuesForNP","typ":"(0 t : Type) -> Generic t code => EnumType code => NP_ (List Type) (K t) code","prefix":"","html_id":"Generics.SOP.valuesForNP"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"valuesFor","typ":"(0 t : Type) -> Generic t code => EnumType code => List t","prefix":"","html_id":"Generics.SOP.valuesFor"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genEq","typ":"Generic t code => POP Eq code => t -> t -> Bool","prefix":"","html_id":"Generics.SOP.genEq"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genCompare","typ":"Generic t code => POP Ord code => t -> t -> Ordering","prefix":"","html_id":"Generics.SOP.genCompare"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genDecEq","typ":"Generic t code => POP DecEq code => (x : t) -> (y : t) -> Dec (x = y)","prefix":"","html_id":"Generics.SOP.genDecEq"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genAppend","typ":"Generic t [ts] => POP Semigroup [ts] => t -> t -> t","prefix":"","html_id":"Generics.SOP.genAppend"},{"html_filename":"sop/docs/docs/Generics.SOP.html","package":"sop","namespace":"Generics.SOP","name":"genNeutral","typ":"Generic t [ts] => POP Monoid [ts] => t","prefix":"","html_id":"Generics.SOP.genNeutral"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HCont","typ":"Type -> Type -> Type","prefix":"","html_id":"Data.SOP.Interfaces.HCont"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HPure","typ":"(k : Type) -> (l : Type) -> HCont k l -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HPure"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hpure","typ":"f a -> p f ks","prefix":"","html_id":"Data.SOP.Interfaces.hpure"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hempty","typ":"Alternative f => HPure Type l p => p f ks","prefix":"","html_id":"Data.SOP.Interfaces.hempty"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hconst","typ":"HPure k l p => a -> p (K a) ks","prefix":"","html_id":"Data.SOP.Interfaces.hconst"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HFunctor","typ":"(k : Type) -> (l : Type) -> HCont k l -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HFunctor"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hmap","typ":"(f a -> g a) -> p f ks -> p g ks","prefix":"","html_id":"Data.SOP.Interfaces.hmap"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hliftA","typ":"HFunctor k l p => (f a -> g a) -> p f ks -> p g ks","prefix":"","html_id":"Data.SOP.Interfaces.hliftA"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcpure","typ":"HFunctor k l p => (0 c : (k -> Type)) -> p c ks => (c a => f a) -> p f ks","prefix":"","html_id":"Data.SOP.Interfaces.hcpure"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HAp","typ":"(k : Type) -> (l : Type) -> ((k -> Type) -> l -> Type) -> ((k -> Type) -> l -> Type) -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HAp"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hap","typ":"q (\\a => f a -> g a) ks -> p f ks -> p g ks","prefix":"","html_id":"Data.SOP.Interfaces.hap"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hliftA2","typ":"HAp k l q p => (f a -> g a -> h a) -> q f ks -> p g ks -> p h ks","prefix":"","html_id":"Data.SOP.Interfaces.hliftA2"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hliftA3","typ":"HAp k l q q => HAp k l q p => (f a -> g a -> h a -> i a) -> q f ks -> q g ks -> p h ks -> p i ks","prefix":"","html_id":"Data.SOP.Interfaces.hliftA3"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hliftA4","typ":"HAp k l q q => HAp k l q p => (f a -> g a -> h a -> i a -> j a) -> q f ks -> q g ks -> q h ks -> p i ks -> p j ks","prefix":"","html_id":"Data.SOP.Interfaces.hliftA4"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcmap","typ":"HAp k l q p => (0 c : (k -> Type)) -> q c ks => (c a => f a -> g a) -> p f ks -> p g ks","prefix":"","html_id":"Data.SOP.Interfaces.hcmap"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcliftA","typ":"HAp k l q p => (0 c : (k -> Type)) -> q c ks -> (c a => f a -> g a) -> p f ks -> p g ks","prefix":"","html_id":"Data.SOP.Interfaces.hcliftA"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcliftA2","typ":"HAp k l q q => HAp k l q p => (0 c : (k -> Type)) -> q c ks => (c a => f a -> g a -> h a) -> q f ks -> p g ks -> p h ks","prefix":"","html_id":"Data.SOP.Interfaces.hcliftA2"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcliftA3","typ":"HAp k l q q => HAp k l q p => (c : (k -> Type)) -> q c ks => (c a => f a -> g a -> h a -> i a) -> q f ks -> q g ks -> p h ks -> p i ks","prefix":"","html_id":"Data.SOP.Interfaces.hcliftA3"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HFold","typ":"(k : Type) -> (l : Type) -> HCont k l -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HFold"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hfoldl","typ":"(acc -> el -> acc) -> acc -> p (K el) ks -> acc","prefix":"","html_id":"Data.SOP.Interfaces.hfoldl"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hfoldr","typ":"(el -> Lazy acc -> acc) -> Lazy acc -> p (K el) ks -> acc","prefix":"","html_id":"Data.SOP.Interfaces.hfoldr"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hsize","typ":"(HFunctor k l p, HFold k l p) => p f ks -> Nat","prefix":"","html_id":"Data.SOP.Interfaces.hsize"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hconcat","typ":"(Monoid m, HFold k l p) => p (K m) ks -> m","prefix":"","html_id":"Data.SOP.Interfaces.hconcat"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hconcatMap","typ":"Monoid m => HFunctor k l p => HFold k l p => (f a -> m) -> p f ks -> m","prefix":"","html_id":"Data.SOP.Interfaces.hconcatMap"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcconcatMap","typ":"Monoid m => HAp k l q p => HFold k l p => (0 c : (k -> Type)) -> q c ks => (c a => f a -> m) -> p f ks -> m","prefix":"","html_id":"Data.SOP.Interfaces.hcconcatMap"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hsequence_","typ":"(Applicative g, HFold k l p) => p (K (g ())) ks -> g ()","prefix":"","html_id":"Data.SOP.Interfaces.hsequence_"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"htraverse_","typ":"Applicative g => HFunctor k l p => HFold k l p => (f a -> g ()) -> p f ks -> g ()","prefix":"","html_id":"Data.SOP.Interfaces.htraverse_"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hfor_","typ":"(Applicative g, (HFold k l p, HFunctor k l p)) => p f ks -> (f a -> g ()) -> g ()","prefix":"","html_id":"Data.SOP.Interfaces.hfor_"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hand","typ":"HFold k l p => p (K Bool) ks -> Bool","prefix":"","html_id":"Data.SOP.Interfaces.hand"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"htoList","typ":"(HFunctor k l p, HFold k l p) => p (K a) ks -> List a","prefix":"","html_id":"Data.SOP.Interfaces.htoList"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hor","typ":"HFold k l p => p (K Bool) ks -> Bool","prefix":"","html_id":"Data.SOP.Interfaces.hor"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hall","typ":"HFunctor k l p => HFold k l p => (f a -> Bool) -> p f ks -> Bool","prefix":"","html_id":"Data.SOP.Interfaces.hall"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hany","typ":"HFunctor k l p => HFold k l p => (f a -> Bool) -> p f ks -> Bool","prefix":"","html_id":"Data.SOP.Interfaces.hany"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hchoice","typ":"HFold k l p => Alternative f => p (K (f a)) ks -> f a","prefix":"","html_id":"Data.SOP.Interfaces.hchoice"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HSequence","typ":"(k : Type) -> (l : Type) -> HCont k l -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HSequence"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hsequence","typ":"Applicative g => p (\\a => g (f a)) ks -> g (p f ks)","prefix":"","html_id":"Data.SOP.Interfaces.hsequence"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"htraverse","typ":"Applicative g => HFunctor k l p => HSequence k l p => (f a -> g (f' a)) -> p f ks -> g (p f' ks)","prefix":"","html_id":"Data.SOP.Interfaces.htraverse"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hfor","typ":"Applicative g => HFunctor k l p => HSequence k l p => p f ks -> (f a -> g (f' a)) -> g (p f' ks)","prefix":"","html_id":"Data.SOP.Interfaces.hfor"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hctraverse","typ":"Applicative g => HAp k l q p => HSequence k l p => (0 c : (k -> Type)) -> q c ks => (c a => f a -> g (f' a)) -> p f ks -> g (p f' ks)","prefix":"","html_id":"Data.SOP.Interfaces.hctraverse"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcfor","typ":"Applicative g => HAp k l q p => HSequence k l p => (0 c : (k -> Type)) -> q c ks => p f ks -> (c a => f a -> g (f' a)) -> g (p f' ks)","prefix":"","html_id":"Data.SOP.Interfaces.hcfor"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"HCollapse","typ":"(k : Type) -> (l : Type) -> HCont k l -> (Type -> Type) -> Type","prefix":"interface","html_id":"Data.SOP.Interfaces.HCollapse"},{"html_filename":"sop/docs/docs/Data.SOP.Interfaces.html","package":"sop","namespace":"Data.SOP.Interfaces","name":"hcollapse","typ":"p (K a) ks -> collapseTo a","prefix":"","html_id":"Data.SOP.Interfaces.hcollapse"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"ArgName","typ":"Type","prefix":"data","html_id":"Generics.Meta.ArgName"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"NamedArg","typ":"Nat -> String -> ArgName","prefix":"","html_id":"Generics.Meta.NamedArg"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"UnnamedArg","typ":"Nat -> ArgName","prefix":"","html_id":"Generics.Meta.UnnamedArg"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"getName","typ":"ArgName -> Maybe String","prefix":"","html_id":"Generics.Meta.getName"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"ConInfo_","typ":"(k : Type) -> List k -> Type","prefix":"record","html_id":"Generics.Meta.ConInfo_"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"MkConInfo","typ":"List String -> String -> NP_ k (K ArgName) ks -> ConInfo_ k ks","prefix":"","html_id":"Generics.Meta.MkConInfo"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".args","typ":"ConInfo_ k ks -> NP_ k (K ArgName) ks","prefix":"","html_id":"Generics.Meta.ConInfo_.(.args)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".conNS","typ":"ConInfo_ k ks -> List String","prefix":"","html_id":"Generics.Meta.ConInfo_.(.conNS)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".conName","typ":"ConInfo_ k ks -> String","prefix":"","html_id":"Generics.Meta.ConInfo_.(.conName)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"conNS","typ":"ConInfo_ k ks -> List String","prefix":"","html_id":"Generics.Meta.ConInfo_.conNS"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"conName","typ":"ConInfo_ k ks -> String","prefix":"","html_id":"Generics.Meta.ConInfo_.conName"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"args","typ":"ConInfo_ k ks -> NP_ k (K ArgName) ks","prefix":"","html_id":"Generics.Meta.ConInfo_.args"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"ConInfo","typ":"List k -> Type","prefix":"","html_id":"Generics.Meta.ConInfo"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"argNames","typ":"ConInfo ks -> Maybe (NP (K String) ks)","prefix":"","html_id":"Generics.Meta.argNames"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"isOperator","typ":"String -> Bool","prefix":"","html_id":"Generics.Meta.isOperator"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"wrapOperator","typ":"String -> String","prefix":"","html_id":"Generics.Meta.wrapOperator"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"TypeInfo'","typ":"(k : Type) -> List (List k) -> Type","prefix":"record","html_id":"Generics.Meta.TypeInfo'"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"MkTypeInfo","typ":"List String -> String -> NP_ (List k) (ConInfo_ k) kss -> TypeInfo' k kss","prefix":"","html_id":"Generics.Meta.MkTypeInfo"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".constructors","typ":"TypeInfo' k kss -> NP_ (List k) (ConInfo_ k) kss","prefix":"","html_id":"Generics.Meta.TypeInfo'.(.constructors)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".typeNS","typ":"TypeInfo' k kss -> List String","prefix":"","html_id":"Generics.Meta.TypeInfo'.(.typeNS)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":".typeName","typ":"TypeInfo' k kss -> String","prefix":"","html_id":"Generics.Meta.TypeInfo'.(.typeName)"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"typeNS","typ":"TypeInfo' k kss -> List String","prefix":"","html_id":"Generics.Meta.TypeInfo'.typeNS"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"typeName","typ":"TypeInfo' k kss -> String","prefix":"","html_id":"Generics.Meta.TypeInfo'.typeName"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"constructors","typ":"TypeInfo' k kss -> NP_ (List k) (ConInfo_ k) kss","prefix":"","html_id":"Generics.Meta.TypeInfo'.constructors"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"TypeInfo","typ":"List (List k) -> Type","prefix":"","html_id":"Generics.Meta.TypeInfo"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"Meta","typ":"Type -> List (List Type) -> Type","prefix":"interface","html_id":"Generics.Meta.Meta"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"meta","typ":"TypeInfo' Type code","prefix":"","html_id":"Generics.Meta.meta"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"metaFor","typ":"(0 t : Type) -> Meta t code => TypeInfo code","prefix":"","html_id":"Generics.Meta.metaFor"},{"html_filename":"sop/docs/docs/Generics.Meta.html","package":"sop","namespace":"Generics.Meta","name":"genShowPrec","typ":"Meta t code => POP Show code => Prec -> t -> String","prefix":"","html_id":"Generics.Meta.genShowPrec"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"POP_","typ":"(k : Type) -> (k -> Type) -> List (List k) -> Type","prefix":"data","html_id":"Data.SOP.POP.POP_"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"MkPOP","typ":"NP_ (List k) (NP_ k f) kss -> POP_ k f kss","prefix":"","html_id":"Data.SOP.POP.MkPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"POP","typ":"(k -> Type) -> List (List k) -> Type","prefix":"","html_id":"Data.SOP.POP.POP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"unPOP","typ":"POP_ k f kss -> NP_ (List k) (NP_ k f) kss","prefix":"","html_id":"Data.SOP.POP.unPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"mapPOP","typ":"(f a -> g a) -> POP f kss -> POP g kss","prefix":"","html_id":"Data.SOP.POP.mapPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"purePOP","typ":"f a -> POP f kss","prefix":"","html_id":"Data.SOP.POP.purePOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"hapPOP","typ":"POP (\\a => f a -> g a) kss -> POP f kss -> POP g kss","prefix":"","html_id":"Data.SOP.POP.hapPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"foldlPOP","typ":"(acc -> el -> acc) -> acc -> POP (K el) kss -> acc","prefix":"","html_id":"Data.SOP.POP.foldlPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"foldrPOP","typ":"(el -> Lazy acc -> acc) -> Lazy acc -> POP (K el) kss -> acc","prefix":"","html_id":"Data.SOP.POP.foldrPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"sequencePOP","typ":"Applicative g => POP (\\a => g (f a)) kss -> g (POP f kss)","prefix":"","html_id":"Data.SOP.POP.sequencePOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"collapsePOP","typ":"POP (K a) kss -> List (List a)","prefix":"","html_id":"Data.SOP.POP.collapsePOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"ordToEqPOP","typ":"POP (Ord . f) kss -> POP (Eq . f) kss","prefix":"","html_id":"Data.SOP.POP.ordToEqPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"monoidToSemigroupPOP","typ":"POP (Monoid . f) kss -> POP (Semigroup . f) kss","prefix":"","html_id":"Data.SOP.POP.monoidToSemigroupPOP"},{"html_filename":"sop/docs/docs/Data.SOP.POP.html","package":"sop","namespace":"Data.SOP.POP","name":"popToNP","typ":"POP_ k (c . f) kss -> (NP_ k (c . f) ks => c (NP_ k f ks)) => NP_ (List k) (c . NP_ k f) kss","prefix":"","html_id":"Data.SOP.POP.popToNP"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"mkGeneric","typ":"Name","prefix":"","html_id":"Generics.Derive.mkGeneric"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"mkCode","typ":"ParamTypeInfo -> TTImp","prefix":"","html_id":"Generics.Derive.mkCode"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"GenericVis","typ":"Visibility -> List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.GenericVis"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"Generic","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.Generic"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"MetaVis","typ":"Visibility -> List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.MetaVis"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"Meta","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.Meta"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"Eq","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.Eq"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"Ord","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.Ord"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"DecEq","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.DecEq"},{"html_filename":"sop/docs/docs/Generics.Derive.html","package":"sop","namespace":"Generics.Derive","name":"Show","typ":"List Name -> ParamTypeInfo -> Res (List TopLevel)","prefix":"","html_id":"Generics.Derive.Show"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"NP_","typ":"(k : Type) -> (k -> Type) -> List k -> Type","prefix":"data","html_id":"Data.SOP.NP.NP_"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"Nil","typ":"NP_ k f []","prefix":"","html_id":"Data.SOP.NP.Nil"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"(::)","typ":"f t -> NP_ k f ks -> NP_ k f (t :: ks)","prefix":"","html_id":"Data.SOP.NP.(::)"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"NP","typ":"(k -> Type) -> List k -> Type","prefix":"","html_id":"Data.SOP.NP.NP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"toI","typ":"NP_ k f ks -> NP I (map f ks)","prefix":"","html_id":"Data.SOP.NP.toI"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"mapNP","typ":"(f a -> g a) -> NP f ks -> NP g ks","prefix":"","html_id":"Data.SOP.NP.mapNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"pureNP","typ":"f a -> NP f ks","prefix":"","html_id":"Data.SOP.NP.pureNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"hapNP","typ":"NP (\\a => f a -> g a) ks -> NP f ks -> NP g ks","prefix":"","html_id":"Data.SOP.NP.hapNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"foldlNP","typ":"(acc -> el -> acc) -> acc -> NP (K el) ks -> acc","prefix":"","html_id":"Data.SOP.NP.foldlNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"foldrNP","typ":"(el -> Lazy acc -> acc) -> Lazy acc -> NP (K el) ks -> acc","prefix":"","html_id":"Data.SOP.NP.foldrNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"sequenceNP","typ":"Applicative g => NP (\\a => g (f a)) ks -> g (NP f ks)","prefix":"","html_id":"Data.SOP.NP.sequenceNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"collapseNP","typ":"NP (K a) ks -> List a","prefix":"","html_id":"Data.SOP.NP.collapseNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"hd","typ":"NP f (k :: ks) -> f k","prefix":"","html_id":"Data.SOP.NP.hd"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"tl","typ":"NP f (k :: ks) -> NP f ks","prefix":"","html_id":"Data.SOP.NP.tl"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"fromListNP","typ":"NP f ks -> List a -> Maybe (NP (K a) ks)","prefix":"","html_id":"Data.SOP.NP.fromListNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"fromList","typ":"List a -> Maybe (NP (K a) ks)","prefix":"","html_id":"Data.SOP.NP.fromList"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"unfoldNP","typ":"NP f ks -> (s -> (s, a)) -> s -> NP (K a) ks","prefix":"","html_id":"Data.SOP.NP.unfoldNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"unfold","typ":"(s -> (s, a)) -> s -> NP (K a) ks","prefix":"","html_id":"Data.SOP.NP.unfold"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"iterateNP","typ":"NP f ks -> (a -> a) -> a -> NP (K a) ks","prefix":"","html_id":"Data.SOP.NP.iterateNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"iterate","typ":"(a -> a) -> a -> NP (K a) ks","prefix":"","html_id":"Data.SOP.NP.iterate"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"Projection","typ":"(k -> Type) -> List k -> k -> Type","prefix":"0","html_id":"Data.SOP.NP.Projection"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"projections","typ":"NP (Projection f ks) ks","prefix":"","html_id":"Data.SOP.NP.projections"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"get","typ":"(0 t : k) -> Elem t ks => NP_ k f ks -> f t","prefix":"","html_id":"Data.SOP.NP.get"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"modify","typ":"(f t -> f t') -> UpdateOnce t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.modify"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"modifyF","typ":"Functor g => (f t -> g (f t')) -> UpdateOnce t t' ks ks' => NP_ k f ks -> g (NP_ k f ks')","prefix":"","html_id":"Data.SOP.NP.modifyF"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"modifyMany","typ":"(f t -> f t') -> UpdateMany t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.modifyMany"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"modifyManyF","typ":"Applicative g => (f t -> g (f t')) -> UpdateMany t t' ks ks' => NP_ k f ks -> g (NP_ k f ks')","prefix":"","html_id":"Data.SOP.NP.modifyManyF"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"setAt","typ":"(0 t : k) -> f t' -> UpdateOnce t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.setAt"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"setAtMany","typ":"(0 t : k) -> f t' -> UpdateMany t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.setAtMany"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"setAt'","typ":"(0 t : k) -> (0 t' : k) -> f t' -> UpdateOnce t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.setAt'"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"setAtMany'","typ":"(0 t : k) -> (0 t' : k) -> f t' -> UpdateMany t t' ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.setAtMany'"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"narrow","typ":"NP f ks -> Sublist ks' ks => NP f ks'","prefix":"","html_id":"Data.SOP.NP.narrow"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"append","typ":"NP f ks -> NP f ks' -> NP f (ks ++ ks')","prefix":"","html_id":"Data.SOP.NP.append"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"expand","typ":"f k -> NP f ks -> Sublist ks ks' => NP f ks'","prefix":"","html_id":"Data.SOP.NP.expand"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"cexpand","typ":"(0 c : (k -> Type)) -> NP c ks' => (c k => f k) -> Sublist ks ks' => NP_ k f ks -> NP_ k f ks'","prefix":"","html_id":"Data.SOP.NP.cexpand"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"ordToEqNP","typ":"NP (Ord . f) ks -> NP (Eq . f) ks","prefix":"","html_id":"Data.SOP.NP.ordToEqNP"},{"html_filename":"sop/docs/docs/Data.SOP.NP.html","package":"sop","namespace":"Data.SOP.NP","name":"monoidToSemigroupNP","typ":"NP (Monoid . f) ks -> NP (Semigroup . f) ks","prefix":"","html_id":"Data.SOP.NP.monoidToSemigroupNP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"SOP_","typ":"(k : Type) -> (k -> Type) -> List (List k) -> Type","prefix":"data","html_id":"Data.SOP.SOP.SOP_"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"MkSOP","typ":"NS_ (List k) (NP_ k f) kss -> SOP_ k f kss","prefix":"","html_id":"Data.SOP.SOP.MkSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"SOP","typ":"(k -> Type) -> List (List k) -> Type","prefix":"","html_id":"Data.SOP.SOP.SOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"unSOP","typ":"SOP_ k f kss -> NS_ (List k) (NP_ k f) kss","prefix":"","html_id":"Data.SOP.SOP.unSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"mapSOP","typ":"(f a -> g a) -> SOP f kss -> SOP g kss","prefix":"","html_id":"Data.SOP.SOP.mapSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"hapSOP","typ":"POP (\\a => f a -> g a) kss -> SOP f kss -> SOP g kss","prefix":"","html_id":"Data.SOP.SOP.hapSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"foldlSOP","typ":"(acc -> el -> acc) -> acc -> SOP (K el) kss -> acc","prefix":"","html_id":"Data.SOP.SOP.foldlSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"foldrSOP","typ":"(el -> Lazy acc -> acc) -> Lazy acc -> SOP (K el) kss -> acc","prefix":"","html_id":"Data.SOP.SOP.foldrSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"sequenceSOP","typ":"Applicative g => SOP (\\a => g (f a)) kss -> g (SOP f kss)","prefix":"","html_id":"Data.SOP.SOP.sequenceSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"collapseSOP","typ":"SOP (K a) kss -> List a","prefix":"","html_id":"Data.SOP.SOP.collapseSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"InjectionSOP","typ":"(k -> Type) -> List (List k) -> List k -> Type","prefix":"0","html_id":"Data.SOP.SOP.InjectionSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"injectionsSOP","typ":"NP_ (List k) (InjectionSOP f kss) kss","prefix":"","html_id":"Data.SOP.SOP.injectionsSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"apInjsPOP_","typ":"POP f kss -> NP (K (SOP f kss)) kss","prefix":"","html_id":"Data.SOP.SOP.apInjsPOP_"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"apInjsPOP","typ":"POP f kss -> List (SOP f kss)","prefix":"","html_id":"Data.SOP.SOP.apInjsPOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"injectSOP","typ":"NP f ks -> Elem ks kss => SOP f kss","prefix":"","html_id":"Data.SOP.SOP.injectSOP"},{"html_filename":"sop/docs/docs/Data.SOP.SOP.html","package":"sop","namespace":"Data.SOP.SOP","name":"extractSOP","typ":"(0 ks : List k) -> SOP f kss -> Elem ks kss => Maybe (NP f ks)","prefix":"","html_id":"Data.SOP.SOP.extractSOP"}]